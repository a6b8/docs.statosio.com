[{"permalink":"//","layout":"home","title":null,"content":"<img src=\"./assets/images/statosio.png\" height=\"60px\">\n<br>\n\nStatosio is an add-on function for [d3.js](https://d3js.org){:target=\"_blank\"} and a standalone ```gem``` for rubys to generate simple charts, in a fast and reliable way.\n\n:heavy_check_mark: build simple diagrams fast and reliable, with one function!\n\n:heavy_check_mark: pure javascript, no additonal css.\n\n:heavy_check_mark: highly customizable with 40+ style and data options.\n\n\n**Javascript**\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n```\n\n**Ruby**\n```ruby\nrequire 'statosio'\nrequire 'prawn'\nrequire 'prawn-svg'\n\n\nfile = File.read( 'data.json' )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: 'name',\n y: 'mobile',\n options: {}\n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500, )\nend\n```\n\n\n[![CDNJS](https://img.shields.io/cdnjs/v/statosio.svg)](https://cdnjs.com/libraries/statosio)\n\n## Video Introduction\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/i6od9O8jz1E?autoplay=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n## Chart Types\n\n### Bar Charts\n\n<div id=\"bar\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : false, \"viewDomId\" : \"bar\" }\n )\n </script>\n</div>\n[Create simple bar chart](../tutorials/simple-bar-chart.html)\n\n### Point Charts\n\n<div id=\"point\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"showAverage\" : false, \"viewDomId\" : \"point\" }\n )\n </script>\n</div>\n[Create a simple point chart](../tutorials/simple-point-chart.html)\n\n### Stacked Bar Charts\n\n<div id=\"stacked\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\": true, \"showAverage\" : false, \"viewDomId\" : \"stacked\" }\n )\n </script>\n</div>\n[Create simple stacked bar chart](../tutorials/simple-stacked-bar-chart.html)\n\n## Features\n\n### Select columns<br><br>\n\n<div id=\"select-columns\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataXSelectors\" : [\"Data\", \"Spock\"],\n \"dataSortSelection\" : \"start\",\n \"showAverage\" : false,\n \"viewDomId\" : \"select-columns\"\n }\n )\n </script>\n</div>\n[Select and change position of columns](../tutorials/select-data.html)\n\n### Sort Data<br><br>\n\n<div id=\"sort-data\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataSortCurrent\" : \"values\", \n \"dataSortByValues\" : \"ascending\", \n \"showAverage\" : false,\n \"viewDomId\" : \"sort-data\"\n }\n )\n </script>\n</div>\n[Sort dataset by values](../tutorials/sort-data.html)\n\n### Customize Style\n\n<div id=\"customize\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"styleColorSelectorsChart\": [\"#E2B08E\", \"#CC8074\"],\n \"styleColorCanvasBackground\" : \"none\",\n \"styleColorGridline\" : \"#2F3138\",\n \"styleStrokeGridline\" : 1,\n \"styleColorFont\" : \"#BABABA\",\n \"styleColorSelectorsText\" : [\"#E2B08E\", \"#BABABA\"],\n \"showAverage\" : false,\n \"viewDomId\" : \"customize\"\n }\n )\n </script>\n</div>\n[Change style to dark-mode](../tutorials/change-style.html)\n\n## Speedtest\n\n| **Name** | **Result** |\n| Loading Time | <insert id='statosioLoadingTime'>waiting..</insert> |\n| Dom Elements | <insert id='statosioDomElements'>waiting..</insert> |\n\n\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"sort":0,"title":"Create a simple bar chart","layout":"page","content":"# Create a simple bar chart\n\n## Result\n\n<div id=\"chart-result\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showAverage\" : false,\n \"viewDomId\" : \"chart-result\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showAverage\" : false,\n }\n )\n } \n )\n </script>\n</body>\n```\n\n\n## Steps\n\n- We need following files.\n\n| **Name** | **Source** | **Description** |\n| d3.js | [https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js](https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js) | d3.js Library | \n| statosio.js | [../libs/statosio.js](/libs/statosio.js) | statosio.js Library | \n| performance.json | [../data/performance.json](/data/performance.json) | Dataset |\n\n- statosio.js Structure\n\n```javascript\nd3.statosio( source, x, y, options )\n``````\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | ```[{},{}...]``` | Array of Objects |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array of Strings or String |\n| **Options** | ```{}``` | Object |\n\n\n### 1: HTML Structure\nSet HTML Structure\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n</head>\n<body>\n</body>\n```\n\n### 2: Load d3.js\nInsert ```<script>``` Element to load d3.js library.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n</head>\n<body>\n</body>\n```\n\n### 3: Load statosio.js\nInsert ```<script>``` Element to load statosio.js.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n</body>\n\n```\n[Source Code](/libs/statosio.js)\n\n\n### 4: Load dataset\nd3.js expect a json array with object in it: ```[ {},{}...]```\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n\n } \n )\n </script>\n</body>\n```\n[Example Dataset](/data/performance.json)\n\n\n### 5: Set dataset ranges\nLoad diagram\n\n- intermediate result\n<div id=\"dataset-range\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"viewDomId\" : \"dataset-range\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n {}\n )\n } \n )\n </script>\n</body>\n```\n\n\n### 6: Add \"show\" options\n\n- intermediate result\n<div id=\"intermediate-show\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showAverage\" : false,\n }\n )\n } \n )\n </script>\n</body>\n```\n\n- Option explained\n\n| **Name** | **Description** | **Details** | \n| [showAverage](../options/show__average.html) | Calculate and show average line | false |\n\nList of all \"show\" Options: [here](../options/index.html#show)","dir":"/tutorials/","name":"simple-bar-chart.md","path":"tutorials/simple-bar-chart.md","url":"/tutorials/simple-bar-chart.html"},{"sort":1,"title":"Create a simple point chart","layout":"page","content":"# Create a simple point chart\n\n## Result\n\n<div id=\"chart-result\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showDataAsCircle\" : true, \n \"showAverage\" : false,\n \"viewDomId\" : \"chart-result\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showDataAsCircle\" : true, \n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\"\n }\n )\n } \n )\n </script>\n</body>\n```\n\n\n## Steps\n\n- We need following files.\n\n| **Name** | **Source** | **Description** |\n| d3.js | [https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js](https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js) | d3.js Library | \n| statosio.js | [../libs/statosio.js](/libs/statosio.js) | statosio.js Library | \n| performance.json | [../data/performance.json](/data/performance.json) | Dataset |\n\n- statosio.js Structure\n\n```javascript\nd3.statosio( source, x, y, options )\n``````\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | ```[{},{}...]``` | Array of Objects |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array of Strings or String |\n| **Options** | ```{}``` | Object |\n\n\n### 1: HTML Structure\nSet HTML Structure\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n</head>\n<body>\n</body>\n```\n\n### 2: Load d3.js\nInsert ```<script>``` Element to load d3.js library.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n</head>\n<body>\n</body>\n```\n\n### 3: Load statosio.js\nInsert ```<script>``` Element to load statosio.js.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n</body>\n\n```\n[Source Code](/libs/statosio.js)\n\n\n### 4: Load dataset\nd3.js expect a json array with object in it: ```[ {},{}...]```\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n\n } \n )\n </script>\n</body>\n```\n[Example Dataset](/data/performance.json)\n\n\n### 5: Set dataset ranges\nLoad diagram\n\n- intermediate result\n<div id=\"dataset-range\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"viewDomId\" : \"dataset-range\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n {}\n )\n } \n )\n </script>\n</body>\n```\n\n\n### 6: Add \"show\" options\n\n- intermediate result\n<div id=\"intermediate-show\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showDataAsCircle\" : true, \n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"showDataAsCircle\" : true, \n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\"\n }\n )\n } \n )\n </script>\n</body>\n```\n\n- Option explained\n\n| **Name** | **Description** | **Details** | \n| [showAverage](../options/show__average.html) | Calculate and show average line | false |\n| [showDataAsCircle](../options/show__data_as_circle.html) | Show data as circles instead of rectangles. Only for not stacked diagram available. | false |\n\nList of all \"show\" Options: [here](../options/index.html#show)","dir":"/tutorials/","name":"simple-point-chart.md","path":"tutorials/simple-point-chart.md","url":"/tutorials/simple-point-chart.html"},{"sort":1,"permalink":"/tutorials/","layout":"page","title":"Tutorials","content":"<h1 id=\"tutorials\">Tutorials</h1>\n\n<p>Speedtest</p>\n\n<ul>\n <li><a href=\"/tutorials/simple-bar-chart.html\">Create a simple bar chart</a></li>\n <li><a href=\"/tutorials/simple-point-chart.html\">Create a simple point chart</a></li>\n <li><a href=\"/tutorials/simple-stacked-bar-chart.html\">Create a simple stacked bar chart</a></li>\n <li><a href=\"/tutorials/select-data.html\">Select and change position of columns</a></li>\n <li><a href=\"/tutorials/sort-data.html\">Sort Dataset by values</a></li>\n <li><a href=\"/tutorials/change-style.html\">Change style to dark-mode</a></li>\n</ul>\n","dir":"/tutorials/","name":"README.md","path":"tutorials/README.md","url":"/tutorials/"},{"sort":1,"title":"A.1. showTitle","layout":"page","content":"# showTitle\n\nShow or hide title on the front of the diagram.\n\n```note\nThe size of the diagramm gets higher inside of the canvas without an title.\n```\n\n\n## Specification\n\nDefault implementation: ```{ showTitle : false }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```showTitle```| ```show__title```| [Show](../options/#show) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| ```false```| ```^(?:true|false)```| Boolean |\n\n\n\n## Example A.\n\nShow title\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showTitle\" : true, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showTitle--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showTitle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showTitle\" : true }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showTitle\" : true }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showTitle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showTitle\" : true }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showTitle\"=>true}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nHide title\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showTitle\" : false, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showTitle--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showTitle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showTitle\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showTitle\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showTitle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showTitle\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showTitle\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"show__title.md","path":"options/show__title.md","url":"/options/show__title.html"},{"sort":2,"title":"Create a simple stacked bar chart","layout":"page","content":"# Create a simple stacked bar chart\n\n## Result\n\n<div id=\"chart-result\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \n \"showAverage\" : false,\n \"viewDomId\" : \"chart-result\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \n \"showAverage\" : false,\n }\n )\n } \n )\n </script>\n</body>\n```\n\n\n## Steps\n\n- We need following files.\n\n| **Name** | **Source** | **Description** |\n| d3.js | [https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js](https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js) | d3.js Library | \n| statosio.js | [../libs/statosio.js](/libs/statosio.js) | statosio.js Library | \n| performance.json | [../data/performance.json](/data/performance.json) | Dataset |\n\n- statosio.js Structure\n\n```javascript\nd3.statosio( source, x, y, options )\n``````\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | ```[{},{}...]``` | Array of Objects |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array of Strings or String |\n| **Options** | ```{}``` | Object |\n\n\n### 1: HTML Structure\nSet HTML Structure\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n</head>\n<body>\n</body>\n```\n\n### 2: Load d3.js\nInsert ```<script>``` Element to load d3.js library.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n</head>\n<body>\n</body>\n```\n\n### 3: Load statosio.js\nInsert ```<script>``` Element to load statosio.js.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n</body>\n\n```\n[Source Code](/libs/statosio.js)\n\n\n### 4: Load dataset\nd3.js expect a json array with object in it: ```[ {},{}...]```\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n\n } \n )\n </script>\n</body>\n```\n[Example Dataset](/data/performance.json)\n\n\n### 5: Set dataset ranges\nLoad diagram\n\n- intermediate result\n<div id=\"dataset-range\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \n \"viewDomId\" : \"dataset-range\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n {}\n )\n } \n )\n </script>\n</body>\n```\n\n\n### 6: Add \"show\" options\n\n- intermediate result\n<div id=\"intermediate-show\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \n \"showAverage\" : false,\n }\n )\n } \n )\n </script>\n</body>\n```\n\n- Option explained\n\n| **Name** | **Description** | **Details** | \n| [showAverage](../options/show__average.html) | Calculate and show average line | false |\n\nList of all \"show\" Options: [here](../options/index.html#show)","dir":"/tutorials/","name":"simple-stacked-bar-chart.md","path":"tutorials/simple-stacked-bar-chart.md","url":"/tutorials/simple-stacked-bar-chart.html"},{"sort":2,"title":"64 Diagrams","layout":"page","content":"<h1 id=\"64-diagrams\">64 Diagrams</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n<h3 id=\"1-showtitle-a\">1. showTitle (A)</h3>\n\n<div id=\"example-1\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":true,\"viewDomId\":\"example-1\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-a\">More Details</a> | Show title</p>\n\n<h3 id=\"2-showtitle-b\">2. showTitle (B)</h3>\n\n<div id=\"example-2\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":false,\"viewDomId\":\"example-2\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-b\">More Details</a> | Hide title</p>\n\n<h3 id=\"3-showlegend-a\">3. showLegend (A)</h3>\n\n<div id=\"example-3\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"viewDomId\":\"example-3\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-a\">More Details</a> | Show legend</p>\n\n<h3 id=\"4-showlegend-b\">4. showLegend (B)</h3>\n\n<div id=\"example-4\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":false,\"viewDomId\":\"example-4\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-b\">More Details</a> | Hide legend</p>\n\n<h3 id=\"5-showlegend-c\">5. showLegend (C)</h3>\n\n<div id=\"example-5\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"showAverage\":false,\"viewDomId\":\"example-5\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-c\">More Details</a> | Hide legend</p>\n\n<h3 id=\"6-showaverage-a\">6. showAverage (A)</h3>\n\n<div id=\"example-6\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":true,\"viewDomId\":\"example-6\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-a\">More Details</a> | Show average Line</p>\n\n<h3 id=\"7-showaverage-b\">7. showAverage (B)</h3>\n\n<div id=\"example-7\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"viewDomId\":\"example-7\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-b\">More Details</a> | Hide average Line</p>\n\n<h3 id=\"8-showaverage-c\">8. showAverage (C)</h3>\n\n<div id=\"example-8\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"showDataAsCircle\":true,\"viewDomId\":\"example-8\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-c\">More Details</a> | Hide average Line as show data with as points</p>\n\n<h3 id=\"9-showrangeylog-a\">9. showRangeYLog (A)</h3>\n\n<div id=\"example-9\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showRangeYLog\":true,\"viewDomId\":\"example-9\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__range_y_log.html#example-a\">More Details</a> | Show Y Range in Log Scale</p>\n\n<h3 id=\"10-showrangeylog-b\">10. showRangeYLog (B)</h3>\n\n<div id=\"example-10\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showRangeYLog\":false,\"viewDomId\":\"example-10\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__range_y_log.html#example-b\">More Details</a> | Show Y Range in Linear Scale</p>\n\n<h3 id=\"11-showdataascircle-a\">11. showDataAsCircle (A)</h3>\n\n<div id=\"example-11\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":true,\"viewDomId\":\"example-11\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-a\">More Details</a> | Draw data with circles</p>\n\n<h3 id=\"12-showdataascircle-b\">12. showDataAsCircle (B)</h3>\n\n<div id=\"example-12\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":false,\"viewDomId\":\"example-12\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-b\">More Details</a> | Draw data with bars</p>\n\n<h3 id=\"13-showdataascircle-c\">13. showDataAsCircle (C)</h3>\n\n<div id=\"example-13\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":true,\"showAverage\":false,\"viewDomId\":\"example-13\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-c\">More Details</a> | Hide average Line as show data with as points</p>\n\n<h3 id=\"14-viewtitle-a\">14. viewTitle (A)</h3>\n\n<div id=\"example-14\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewTitle\":\"42\",\"viewDomId\":\"example-14\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__title.html#example-a\">More Details</a> | Change title to: “<code class=\"language-plaintext highlighter-rouge\">42</code>”</p>\n\n<h3 id=\"15-viewdomid-a\">15. viewDomId (A)</h3>\n\n<div id=\"example-15\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewDomId\":\"example-15\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__dom_id.html#example-a\">More Details</a> | Insert SVG into the DOM Element with the id: “<code class=\"language-plaintext highlighter-rouge\">findMe</code>”</p>\n\n<h3 id=\"16-viewmargintop-a\">16. viewMarginTop (A)</h3>\n\n<div id=\"example-16\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginTop\":0,\"viewDomId\":\"example-16\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__top.html#example-a\">More Details</a> | Set top margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"17-viewmargintop-b\">17. viewMarginTop (B)</h3>\n\n<div id=\"example-17\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginTop\":150,\"viewDomId\":\"example-17\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__top.html#example-b\">More Details</a> | Set top margin to: <code class=\"language-plaintext highlighter-rouge\">150</code></p>\n\n<h3 id=\"18-viewmarginright-a\">18. viewMarginRight (A)</h3>\n\n<div id=\"example-18\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginRight\":0,\"viewDomId\":\"example-18\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__right.html#example-a\">More Details</a> | Set right margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"19-viewmarginright-b\">19. viewMarginRight (B)</h3>\n\n<div id=\"example-19\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginRight\":200,\"viewDomId\":\"example-19\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__right.html#example-b\">More Details</a> | Set right margin to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"20-viewmarginbottom-a\">20. viewMarginBottom (A)</h3>\n\n<div id=\"example-20\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginBottom\":0,\"viewDomId\":\"example-20\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__bottom.html#example-a\">More Details</a> | Set bottom margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"21-viewmarginbottom-b\">21. viewMarginBottom (B)</h3>\n\n<div id=\"example-21\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginBottom\":200,\"viewDomId\":\"example-21\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__bottom.html#example-b\">More Details</a> | Set bottom margin to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"22-viewmarginleft-a\">22. viewMarginLeft (A)</h3>\n\n<div id=\"example-22\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginLeft\":0,\"viewDomId\":\"example-22\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__left.html#example-a\">More Details</a> | Set left margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"23-viewmarginleft-b\">23. viewMarginLeft (B)</h3>\n\n<div id=\"example-23\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginLeft\":200,\"viewDomId\":\"example-23\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__left.html#example-b\">More Details</a> | Set left margin to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"24-viewwidthouter-a\">24. viewWidthOuter (A)</h3>\n\n<div id=\"example-24\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewWidthOuter\":200,\"viewDomId\":\"example-24\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__width__outer.html#example-a\">More Details</a> | Set total width to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"25-viewwidthouter-b\">25. viewWidthOuter (B)</h3>\n\n<div id=\"example-25\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewWidthOuter\":800,\"viewDomId\":\"example-25\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__width__outer.html#example-b\">More Details</a> | Set total width to: <code class=\"language-plaintext highlighter-rouge\">800</code></p>\n\n<h3 id=\"26-viewheightouter-a\">26. viewHeightOuter (A)</h3>\n\n<div id=\"example-26\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewHeightOuter\":100,\"viewDomId\":\"example-26\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__height__outer.html#example-a\">More Details</a> | Set total height to: <code class=\"language-plaintext highlighter-rouge\">100</code></p>\n\n<h3 id=\"27-viewheightouter-b\">27. viewHeightOuter (B)</h3>\n\n<div id=\"example-27\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewHeightOuter\":600,\"viewDomId\":\"example-27\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__height__outer.html#example-b\">More Details</a> | Set total height to: <code class=\"language-plaintext highlighter-rouge\">600</code></p>\n\n<h3 id=\"28-viewtranslatemultiplicator-a\">28. viewTranslateMultiplicator (A)</h3>\n\n<div id=\"example-28\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewTranslateMultiplicator\":0.42,\"viewDomId\":\"example-28\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__translate__multiplicator.html#example-a\">More Details</a> | Change distance between title, legend and diagram to: <code class=\"language-plaintext highlighter-rouge\">0.42</code></p>\n\n<h3 id=\"29-viewtranslatemultiplicator-b\">29. viewTranslateMultiplicator (B)</h3>\n\n<div id=\"example-29\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewTranslateMultiplicator\":2.42,\"viewDomId\":\"example-29\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__translate__multiplicator.html#example-b\">More Details</a> | Change distance between title, legend and diagram to: <code class=\"language-plaintext highlighter-rouge\">2.42</code></p>\n\n<h3 id=\"30-dataxselectors-a\">30. dataXSelectors (A)</h3>\n\n<div id=\"example-30\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXSelectors\":[\"Data\"],\"showAverage\":false,\"viewDomId\":\"example-30\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__selectors.html#example-a\">More Details</a> | Selection is set to: <code class=\"language-plaintext highlighter-rouge\">[\"Data\"]</code></p>\n\n<h3 id=\"31-dataxselectors-b\">31. dataXSelectors (B)</h3>\n\n<div id=\"example-31\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXSelectors\":[\"Spock\",\"Data\"],\"viewDomId\":\"example-31\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__selectors.html#example-b\">More Details</a> | Multiple selections are set: <code class=\"language-plaintext highlighter-rouge\">[\"Spock\", \"Data\"]</code></p>\n\n<h3 id=\"32-dataxtextlength-a\">32. dataXTextLength (A)</h3>\n\n<div id=\"example-32\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXTextLength\":5,\"viewDomId\":\"example-32\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__text__length.html#example-a\">More Details</a> | Set the maximum text label length for x range values to: <code class=\"language-plaintext highlighter-rouge\">5</code></p>\n\n<h3 id=\"33-dataxtextlength-b\">33. dataXTextLength (B)</h3>\n\n<div id=\"example-33\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXTextLength\":18,\"viewDomId\":\"example-33\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__text__length.html#example-b\">More Details</a> | Set the maximum text label length for x range values to: <code class=\"language-plaintext highlighter-rouge\">18</code></p>\n\n<h3 id=\"34-dataxtextplaceholder-a\">34. dataXTextPlaceholder (A)</h3>\n\n<div id=\"example-34\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXTextPlaceholder\":\"-----\",\"dataXTextLength\":10,\"viewDomId\":\"example-34\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__text__placeholder.html#example-a\">More Details</a> | Change suffix for cut of x range text labels to: <code class=\"language-plaintext highlighter-rouge\">-----</code></p>\n\n<h3 id=\"35-dataxtextplaceholder-b\">35. dataXTextPlaceholder (B)</h3>\n\n<div id=\"example-35\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXTextPlaceholder\":\"\",\"dataXTextLength\":10,\"viewDomId\":\"example-35\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__text__placeholder.html#example-b\">More Details</a> | Change suffix for cut of x range text labels to: ``````</p>\n\n<h3 id=\"36-datayticks-a\">36. dataYTicks (A)</h3>\n\n<div id=\"example-36\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataYTicks\":2,\"viewDomId\":\"example-36\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__y__ticks.html#example-a\">More Details</a> | Change y range ticks to: <code class=\"language-plaintext highlighter-rouge\">2</code></p>\n\n<h3 id=\"37-datayticks-b\">37. dataYTicks (B)</h3>\n\n<div id=\"example-37\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataYTicks\":20,\"viewDomId\":\"example-37\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__y__ticks.html#example-b\">More Details</a> | Change y range ticks to: <code class=\"language-plaintext highlighter-rouge\">20</code></p>\n\n<h3 id=\"38-datasortcurrent-a\">38. dataSortCurrent (A)</h3>\n\n<div id=\"example-38\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortCurrent\":\"values\",\"viewDomId\":\"example-38\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__current.html#example-a\">More Details</a> | Set sort to: <code class=\"language-plaintext highlighter-rouge\">values</code></p>\n\n<h3 id=\"39-datasortcurrent-b\">39. dataSortCurrent (B)</h3>\n\n<div id=\"example-39\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortCurrent\":\"names\",\"viewDomId\":\"example-39\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__current.html#example-b\">More Details</a> | Set sort to: <code class=\"language-plaintext highlighter-rouge\">names</code></p>\n\n<h3 id=\"40-datasortbyvalues-a\">40. dataSortByValues (A)</h3>\n\n<div id=\"example-40\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortCurrent\":\"values\",\"dataSortByValues\":\"ascending\",\"showAverage\":false,\"viewDomId\":\"example-40\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__by__values.html#example-a\">More Details</a> | Set sequence to: <code class=\"language-plaintext highlighter-rouge\">ascending</code> and hide average line.</p>\n\n<h3 id=\"41-datasortbyvalues-b\">41. dataSortByValues (B)</h3>\n\n<div id=\"example-41\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortCurrent\":\"values\",\"dataSortByValues\":\"decending\",\"viewDomId\":\"example-41\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__by__values.html#example-b\">More Details</a> | Set sequence to: <code class=\"language-plaintext highlighter-rouge\">decending</code></p>\n\n<h3 id=\"42-datasortbyvalues-c\">42. dataSortByValues (C)</h3>\n\n<div id=\"example-42\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortCurrent\":\"none\",\"viewDomId\":\"example-42\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__by__values.html#example-c\">More Details</a> | Set sequence to: ``````</p>\n\n<h3 id=\"43-datasortbynames-a\">43. dataSortByNames (A)</h3>\n\n<div id=\"example-43\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"dataSortCurrent\":\"names\",\"dataSortByNames\":\"ascending\",\"viewDomId\":\"example-43\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__by__names.html#example-a\">More Details</a> | Set sequence to: <code class=\"language-plaintext highlighter-rouge\">ascending</code></p>\n\n<h3 id=\"44-datasortbynames-b\">44. dataSortByNames (B)</h3>\n\n<div id=\"example-44\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"dataSortCurrent\":\"names\",\"dataSortByNames\":\"decending\",\"viewDomId\":\"example-44\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__by__names.html#example-b\">More Details</a> | Set sequence to: <code class=\"language-plaintext highlighter-rouge\">decending</code></p>\n\n<h3 id=\"45-datasortselection-a\">45. dataSortSelection (A)</h3>\n\n<div id=\"example-45\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortSelection\":\"start\",\"dataXSelectors\":[\"Spock\"],\"viewDomId\":\"example-45\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__selection.html#example-a\">More Details</a> | Set selection to: <code class=\"language-plaintext highlighter-rouge\">start</code></p>\n\n<h3 id=\"46-datasortselection-b\">46. dataSortSelection (B)</h3>\n\n<div id=\"example-46\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortSelection\":\"end\",\"dataXSelectors\":[\"Spock\"],\"viewDomId\":\"example-46\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__selection.html#example-b\">More Details</a> | Set selection to: <code class=\"language-plaintext highlighter-rouge\">end</code></p>\n\n<h3 id=\"47-datasortselection-c\">47. dataSortSelection (C)</h3>\n\n<div id=\"example-47\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataSortSelection\":\"none\",\"dataXSelectors\":[\"Spock\"],\"viewDomId\":\"example-47\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__sort__selection.html#example-c\">More Details</a> | Set selection to: <code class=\"language-plaintext highlighter-rouge\">none</code></p>\n\n<h3 id=\"48-datalegendtextseparater-a\">48. dataLegendTextSeparater (A)</h3>\n\n<div id=\"example-48\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"dataLegendTextSeparater\":\"_\",\"viewDomId\":\"example-48\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__legend__text__separater.html#example-a\">More Details</a> | Replace character “<code class=\"language-plaintext highlighter-rouge\">_</code>” to “ “ in the legend text label</p>\n\n<h3 id=\"49-stylecoloraverage-a\">49. styleColorAverage (A)</h3>\n\n<div id=\"example-49\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorAverage\":\"purple\",\"viewDomId\":\"example-49\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__average.html#example-a\">More Details</a> | Set average color line to: <code class=\"language-plaintext highlighter-rouge\">purple</code></p>\n\n<h3 id=\"50-stylecoloraverage-b\">50. styleColorAverage (B)</h3>\n\n<div id=\"example-50\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorAverage\":\"#c1033c\",\"viewDomId\":\"example-50\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__average.html#example-b\">More Details</a> | Set average color line to: <code class=\"language-plaintext highlighter-rouge\">#c1033c</code></p>\n\n<h3 id=\"51-stylecolorcanvasbackground-a\">51. styleColorCanvasBackground (A)</h3>\n\n<div id=\"example-51\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorCanvasBackground\":\"lightgray\",\"viewDomId\":\"example-51\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__canvas_background.html#example-a\">More Details</a> | Set background color to: <code class=\"language-plaintext highlighter-rouge\">lightgray</code></p>\n\n<h3 id=\"52-stylecolorcanvasbackground-b\">52. styleColorCanvasBackground (B)</h3>\n\n<div id=\"example-52\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorCanvasBackground\":\"#fed8b1\",\"viewDomId\":\"example-52\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__canvas_background.html#example-b\">More Details</a> | Set background color to: <code class=\"language-plaintext highlighter-rouge\">#fed8b1</code></p>\n\n<h3 id=\"53-stylecolorfont-a\">53. styleColorFont (A)</h3>\n\n<div id=\"example-53\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorFont\":\"red\",\"viewDomId\":\"example-53\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__font.html#example-a\">More Details</a> | Set default font color to: <code class=\"language-plaintext highlighter-rouge\">red</code></p>\n\n<h3 id=\"54-stylecolorfont-b\">54. styleColorFont (B)</h3>\n\n<div id=\"example-54\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorFont\":\"#f66504\",\"viewDomId\":\"example-54\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__font.html#example-b\">More Details</a> | Set default font color to: <code class=\"language-plaintext highlighter-rouge\">#f66504</code></p>\n\n<h3 id=\"55-stylecolorlegends-a\">55. styleColorLegends (A)</h3>\n\n<div id=\"example-55\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"styleColorLegends\":[\"yellow\",\"red\",\"green\"],\"viewDomId\":\"example-55\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__legends.html#example-a\">More Details</a> | Set color legend palette to: <code class=\"language-plaintext highlighter-rouge\">[\"yellow\", \"red\", \"green\"]</code></p>\n\n<h3 id=\"56-stylecolorlegends-b\">56. styleColorLegends (B)</h3>\n\n<div id=\"example-56\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"styleColorLegends\":[\"#f59351\",\"#c9504a\",\"#12514c\",\"#2f7872\",\"#a6b797\"],\"viewDomId\":\"example-56\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__legends.html#example-b\">More Details</a> |</p>\n\n<h3 id=\"57-stylecolorgridline-a\">57. styleColorGridline (A)</h3>\n\n<div id=\"example-57\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorGridline\":\"yellow\",\"viewDomId\":\"example-57\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__gridline.html#example-a\">More Details</a> | Set gridline value to: <code class=\"language-plaintext highlighter-rouge\">yellow</code></p>\n\n<h3 id=\"58-stylecolorgridline-b\">58. styleColorGridline (B)</h3>\n\n<div id=\"example-58\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleColorGridline\":\"#f59351\",\"viewDomId\":\"example-58\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__gridline.html#example-b\">More Details</a> | Set gridline value to: <code class=\"language-plaintext highlighter-rouge\">#f59351</code></p>\n\n<h3 id=\"59-stylecolorselectorschart-a\">59. styleColorSelectorsChart (A)</h3>\n\n<div id=\"example-59\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"styleColorSelectorsChart\":[\"yellow\",\"red\",\"green\"],\"dataXSelectors\":[\"Spock\"],\"viewDomId\":\"example-59\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__selectors__chart.html#example-a\">More Details</a> | Set palette to: <code class=\"language-plaintext highlighter-rouge\">[\"yellow\", \"red\", \"green\"]</code></p>\n\n<h3 id=\"60-stylecolorselectorschart-b\">60. styleColorSelectorsChart (B)</h3>\n\n<div id=\"example-60\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"styleColorSelectorsChart\":[\"#f59351\",\"#c9504a\",\"#12514c\"],\"dataXSelectors\":[\"Spock\"],\"viewDomId\":\"example-60\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__selectors__chart.html#example-b\">More Details</a> | Set palette to: <code class=\"language-plaintext highlighter-rouge\">[\"#f59351\", \"#c9504a\", \"#12514c\"]</code></p>\n\n<h3 id=\"61-stylecolorselectorstext-a\">61. styleColorSelectorsText (A)</h3>\n\n<div id=\"example-61\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"styleColorSelectorsText\":[\"grey\",\"lightgrey\"],\"dataXSelectors\":[\"Spock\"],\"viewDomId\":\"example-61\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__selectors__text.html#example-a\">More Details</a> | Set font color of selection and others to: <code class=\"language-plaintext highlighter-rouge\">[\"grey\", \"lightgrey\"]</code></p>\n\n<h3 id=\"62-stylecolorselectorstext-b\">62. styleColorSelectorsText (B)</h3>\n\n<div id=\"example-62\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"styleColorSelectorsText\":[\"#f59351\",\"#a6b797\"],\"dataXSelectors\":[\"Spock\"],\"viewDomId\":\"example-62\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__color__selectors__text.html#example-b\">More Details</a> | Set font color of selection and others to: <code class=\"language-plaintext highlighter-rouge\">[\"#f59351\", \"#a6b797\"]</code></p>\n\n<h3 id=\"63-stylefontsizetext-a\">63. styleFontSizeText (A)</h3>\n\n<div id=\"example-63\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleFontSizeText\":20,\"viewDomId\":\"example-63\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__font__size__text.html#example-a\">More Details</a> | Set default font size to: <code class=\"language-plaintext highlighter-rouge\">20</code></p>\n\n<h3 id=\"64-stylefontsizetext-b\">64. styleFontSizeText (B)</h3>\n\n<div id=\"example-64\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"styleFontSizeText\":5,\"viewDomId\":\"example-64\"})\n\t</script>\n</div>\n<p><a href=\"../options/style__font__size__text.html#example-b\">More Details</a> | Set default font size to: <code class=\"language-plaintext highlighter-rouge\">5</code></p>\n\n","dir":"/benchmarks/","name":"benchmark-2.md","path":"benchmarks/benchmark-2.md","url":"/benchmarks/benchmark-2.html"},{"sort":2,"title":"A.2. showLegend","layout":"page","content":"# showLegend\n\nShow or hide legend. Recommended for stacked diagrams.\n\n```note\nThe size of the diagramm gets higher inside of the canvas without an legend.\n```\n\n\n## Specification\n\nDefault implementation: ```{ showLegend : false }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```showLegend```| ```show__legend```| [Show](../options/#show) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| ```false```| ```^(?:true|false)```| Boolean |\n\n\n\n## Example A.\n\nShow legend\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showLegend--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showLegend.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"showLegend\" : true }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showLegend</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"showLegend\"=>true}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nHide legend\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : false, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showLegend--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showLegend.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"showLegend\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showLegend</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"showLegend\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example C.\n\nHide legend\n\n### Output\n\n <div id=\"c\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true, \"showAverage\" : false, \"view__dom_id\" : \"c\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showLegend--example-c.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showLegend.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"showLegend\" : true, \"showAverage\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true, \"showAverage\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showLegend</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true, \"showAverage\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"showLegend\"=>true, \"showAverage\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"show__legend.md","path":"options/show__legend.md","url":"/options/show__legend.html"},{"sort":2,"title":"Options","permalink":"/options/","layout":"page","content":"<h1 id=\"options\">Options</h1>\n<h2 id=\"categories\">Categories</h2>\n<h3 id=\"show\">A. Show</h3>\n<p>Show or hide elements from the view.</p>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"> </th>\n <th style=\"text-align: left\"><strong>Option</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong> </th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\">A.1.</td>\n <td style=\"text-align: left\"><a href=\"/options/show__title.html\">showTitle</a></td>\n <td style=\"text-align: left\">false</td>\n <td style=\"text-align: left\"><a href=\"../options/show__title.html#example-a\">A</a>, <a href=\"../options/show__title.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or hide title on the front of the diagram.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">A.2.</td>\n <td style=\"text-align: left\"><a href=\"/options/show__legend.html\">showLegend</a></td>\n <td style=\"text-align: left\">false</td>\n <td style=\"text-align: left\"><a href=\"../options/show__legend.html#example-a\">A</a>, <a href=\"../options/show__legend.html#example-b\">B</a>, <a href=\"../options/show__legend.html#example-c\">C</a></td>\n <td style=\"text-align: left\">Show or hide legend. Recommended for stacked diagrams.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">A.3.</td>\n <td style=\"text-align: left\"><a href=\"/options/show__average.html\">showAverage</a></td>\n <td style=\"text-align: left\">true</td>\n <td style=\"text-align: left\"><a href=\"../options/show__average.html#example-a\">A</a>, <a href=\"../options/show__average.html#example-b\">B</a>, <a href=\"../options/show__average.html#example-c\">C</a></td>\n <td style=\"text-align: left\">Calculate and show average line</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">A.4.</td>\n <td style=\"text-align: left\"><a href=\"/options/show__range_y_log.html\">showRangeYLog</a></td>\n <td style=\"text-align: left\">false</td>\n <td style=\"text-align: left\"><a href=\"../options/show__range_y_log.html#example-a\">A</a>, <a href=\"../options/show__range_y_log.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Calculate and show range y in a log scale.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">A.5.</td>\n <td style=\"text-align: left\"><a href=\"/options/show__data_as_circle.html\">showDataAsCircle</a></td>\n <td style=\"text-align: left\">false</td>\n <td style=\"text-align: left\"><a href=\"../options/show__data_as_circle.html#example-a\">A</a>, <a href=\"../options/show__data_as_circle.html#example-b\">B</a>, <a href=\"../options/show__data_as_circle.html#example-c\">C</a></td>\n <td style=\"text-align: left\">Show data as circles instead of rectangles. Only for not stacked diagram available.</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"view\">B. View</h3>\n<p>Settings around the diagram as a whole.</p>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"> </th>\n <th style=\"text-align: left\"><strong>Option</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong> </th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\">B.1.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__title.html\">viewTitle</a></td>\n <td style=\"text-align: left\">“Statosio Demo”</td>\n <td style=\"text-align: left\"><a href=\"../options/view__title.html#example-a\">A</a></td>\n <td style=\"text-align: left\">Set title content.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.2.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__dom_id.html\">viewDomId</a></td>\n <td style=\"text-align: left\">“d3_statosio”</td>\n <td style=\"text-align: left\"><a href=\"../options/view__dom_id.html#example-a\">A</a></td>\n <td style=\"text-align: left\">Set id from the &lt;div&gt; Element which holds the d3 content inside.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.3.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__margin__top.html\">viewMarginTop</a></td>\n <td style=\"text-align: left\">20</td>\n <td style=\"text-align: left\"><a href=\"../options/view__margin__top.html#example-a\">A</a>, <a href=\"../options/view__margin__top.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set margin top</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.4.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__margin__right.html\">viewMarginRight</a></td>\n <td style=\"text-align: left\">40</td>\n <td style=\"text-align: left\"><a href=\"../options/view__margin__right.html#example-a\">A</a>, <a href=\"../options/view__margin__right.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set margin right</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.5.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__margin__bottom.html\">viewMarginBottom</a></td>\n <td style=\"text-align: left\">100</td>\n <td style=\"text-align: left\"><a href=\"../options/view__margin__bottom.html#example-a\">A</a>, <a href=\"../options/view__margin__bottom.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set margin bottom</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.6.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__margin__left.html\">viewMarginLeft</a></td>\n <td style=\"text-align: left\">60</td>\n <td style=\"text-align: left\"><a href=\"../options/view__margin__left.html#example-a\">A</a>, <a href=\"../options/view__margin__left.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set margin left</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.7.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__width__outer.html\">viewWidthOuter</a></td>\n <td style=\"text-align: left\">600</td>\n <td style=\"text-align: left\"><a href=\"../options/view__width__outer.html#example-a\">A</a>, <a href=\"../options/view__width__outer.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set width of the “canvas” including margin, titles etc.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.8.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__height__outer.html\">viewHeightOuter</a></td>\n <td style=\"text-align: left\">300</td>\n <td style=\"text-align: left\"><a href=\"../options/view__height__outer.html#example-a\">A</a>, <a href=\"../options/view__height__outer.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set height of the “canvas” including margin.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">B.9.</td>\n <td style=\"text-align: left\"><a href=\"/options/view__translate__multiplicator.html\">viewTranslateMultiplicator</a></td>\n <td style=\"text-align: left\">1.5</td>\n <td style=\"text-align: left\"><a href=\"../options/view__translate__multiplicator.html#example-a\">A</a>, <a href=\"../options/view__translate__multiplicator.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Between title, legend and diagram are spaces. These spaces gets calculated through this multiplicator.</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"data\">C. Data</h3>\n<p>Rearrange Data by sorting or set selectors.</p>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"> </th>\n <th style=\"text-align: left\"><strong>Option</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong> </th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\">C.1.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__x__key.html\">dataXKey</a></td>\n <td style=\"text-align: left\">””</td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Expect a “key” name from the dataset to arrange the x range.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.2.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__x__selectors.html\">dataXSelectors</a></td>\n <td style=\"text-align: left\">[]</td>\n <td style=\"text-align: left\"><a href=\"../options/data__x__selectors.html#example-a\">A</a>, <a href=\"../options/data__x__selectors.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Expect one or more names which are included in the x range.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.3.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__x__text__length.html\">dataXTextLength</a></td>\n <td style=\"text-align: left\">25</td>\n <td style=\"text-align: left\"><a href=\"../options/data__x__text__length.html#example-a\">A</a>, <a href=\"../options/data__x__text__length.html#example-b\">B</a></td>\n <td style=\"text-align: left\">This value counts the length of the x range names an cut of the rest.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.4.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__x__text__placeholder.html\">dataXTextPlaceholder</a></td>\n <td style=\"text-align: left\">“…”</td>\n <td style=\"text-align: left\"><a href=\"../options/data__x__text__placeholder.html#example-a\">A</a>, <a href=\"../options/data__x__text__placeholder.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set an suffix behind a string. As a signal to the viewer, that the text was cut of.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.5.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__y__keys.html\">dataYKeys</a></td>\n <td style=\"text-align: left\">[]</td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Expect “keys” from the dataset to arrange the y range. If you use one key the internal state is “bar”. if you use multiple the internal is “stacked”</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.6.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__y__ticks.html\">dataYTicks</a></td>\n <td style=\"text-align: left\">5</td>\n <td style=\"text-align: left\"><a href=\"../options/data__y__ticks.html#example-a\">A</a>, <a href=\"../options/data__y__ticks.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Ticks in d3 land means “steps”. Here you can set the steps from the grid and y range.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.7.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__sort__current.html\">dataSortCurrent</a></td>\n <td style=\"text-align: left\">“none”</td>\n <td style=\"text-align: left\"><a href=\"../options/data__sort__current.html#example-a\">A</a>, <a href=\"../options/data__sort__current.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the general route for sorting. You can choose between “none”, “values”, “names”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.8.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__sort__by__values.html\">dataSortByValues</a></td>\n <td style=\"text-align: left\">“decending”</td>\n <td style=\"text-align: left\"><a href=\"../options/data__sort__by__values.html#example-a\">A</a>, <a href=\"../options/data__sort__by__values.html#example-b\">B</a>, <a href=\"../options/data__sort__by__values.html#example-c\">C</a></td>\n <td style=\"text-align: left\">Here you can set type of sorting. You can choose between “ascending” and “decending”</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.9.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__sort__by__names.html\">dataSortByNames</a></td>\n <td style=\"text-align: left\">“ascending”</td>\n <td style=\"text-align: left\"><a href=\"../options/data__sort__by__names.html#example-a\">A</a>, <a href=\"../options/data__sort__by__names.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Here you can set type of sorting. You can choose between “ascending” and “decending”</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.10.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__sort__selection.html\">dataSortSelection</a></td>\n <td style=\"text-align: left\">“none”</td>\n <td style=\"text-align: left\"><a href=\"../options/data__sort__selection.html#example-a\">A</a>, <a href=\"../options/data__sort__selection.html#example-b\">B</a>, <a href=\"../options/data__sort__selection.html#example-c\">C</a></td>\n <td style=\"text-align: left\">Change position of your selection. You can choose between “start”, “end” and “none”</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">C.11.</td>\n <td style=\"text-align: left\"><a href=\"/options/data__legend__text__separater.html\">dataLegendTextSeparater</a></td>\n <td style=\"text-align: left\">“_”</td>\n <td style=\"text-align: left\"><a href=\"../options/data__legend__text__separater.html#example-a\">A</a></td>\n <td style=\"text-align: left\">This tweak split your keys with the separater and capitalize every word and insert a space in between.</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"style\">D. Style</h3>\n<p>Set style settings from specific element.</p>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"> </th>\n <th style=\"text-align: left\"><strong>Option</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong> </th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\">D.1.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__color__average.html\">styleColorAverage</a></td>\n <td style=\"text-align: left\">“#000000”</td>\n <td style=\"text-align: left\"><a href=\"../options/style__color__average.html#example-a\">A</a>, <a href=\"../options/style__color__average.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set color of the average line.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.2.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__color__canvas_background.html\">styleColorCanvasBackground</a></td>\n <td style=\"text-align: left\">“white”</td>\n <td style=\"text-align: left\"><a href=\"../options/style__color__canvas_background.html#example-a\">A</a>, <a href=\"../options/style__color__canvas_background.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set background color.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.3.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__color__font.html\">styleColorFont</a></td>\n <td style=\"text-align: left\">“#000000”</td>\n <td style=\"text-align: left\"><a href=\"../options/style__color__font.html#example-a\">A</a>, <a href=\"../options/style__color__font.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default font color. Excluding non-selection content.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.4.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__color__legends.html\">styleColorLegends</a></td>\n <td style=\"text-align: left\">[“#5186EC”, “#D95040”, “#F2BD42”]</td>\n <td style=\"text-align: left\"><a href=\"../options/style__color__legends.html#example-a\">A</a>, <a href=\"../options/style__color__legends.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set legend color palettes. Expect an array of “hex” values or “html” color-names.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.5.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__color__gridline.html\">styleColorGridline</a></td>\n <td style=\"text-align: left\">“#E5E5E5”</td>\n <td style=\"text-align: left\"><a href=\"../options/style__color__gridline.html#example-a\">A</a>, <a href=\"../options/style__color__gridline.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the gridline color. Use “hex” value or “html” color-names.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.6.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__color__selectors__chart.html\">styleColorSelectorsChart</a></td>\n <td style=\"text-align: left\">[“#EE752F”, “#5186EC”]</td>\n <td style=\"text-align: left\"><a href=\"../options/style__color__selectors__chart.html#example-a\">A</a>, <a href=\"../options/style__color__selectors__chart.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Colorize the chart of the selection. Use “hex” values or “html” color-names.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.7.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__color__selectors__text.html\">styleColorSelectorsText</a></td>\n <td style=\"text-align: left\">[“#000000”, “#000000”]</td>\n <td style=\"text-align: left\"><a href=\"../options/style__color__selectors__text.html#example-a\">A</a>, <a href=\"../options/style__color__selectors__text.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Colorize the font of the selection. Use “hex” values or “html” color-names.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.8.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__font__size__text.html\">styleFontSizeText</a></td>\n <td style=\"text-align: left\">10</td>\n <td style=\"text-align: left\"><a href=\"../options/style__font__size__text.html#example-a\">A</a>, <a href=\"../options/style__font__size__text.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default font size, including selection.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.9.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__font__size__title.html\">styleFontSizeTitle</a></td>\n <td style=\"text-align: left\">18</td>\n <td style=\"text-align: left\"><a href=\"../options/style__font__size__title.html#example-a\">A</a>, <a href=\"../options/style__font__size__title.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set font size of title</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.10.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__font__family.html\">styleFontFamily</a></td>\n <td style=\"text-align: left\">“arial”</td>\n <td style=\"text-align: left\"><a href=\"../options/style__font__family.html#example-a\">A</a>, <a href=\"../options/style__font__family.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default font family</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.11.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__font__format__selectors.html\">styleFontFormatSelectors</a></td>\n <td style=\"text-align: left\">[“bold”, “normal”]</td>\n <td style=\"text-align: left\"><a href=\"../options/style__font__format__selectors.html#example-a\">A</a>, <a href=\"../options/style__font__format__selectors.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set format of content use “Html” Syntax (“bold”, “underline”, “normal” etc.).</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.12.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__stroke__average.html\">styleStrokeAverage</a></td>\n <td style=\"text-align: left\">2</td>\n <td style=\"text-align: left\"><a href=\"../options/style__stroke__average.html#example-a\">A</a>, <a href=\"../options/style__stroke__average.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set stroke weight of average line.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.13.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__stroke__gridline.html\">styleStrokeGridline</a></td>\n <td style=\"text-align: left\">2</td>\n <td style=\"text-align: left\"><a href=\"../options/style__stroke__gridline.html#example-a\">A</a>, <a href=\"../options/style__stroke__gridline.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set stroke weight of gridline.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.14.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__legend__rect_size__full.html\">styleLegendRectSizeFull</a></td>\n <td style=\"text-align: left\">16</td>\n <td style=\"text-align: left\"><a href=\"../options/style__legend__rect_size__full.html#example-a\">A</a>, <a href=\"../options/style__legend__rect_size__full.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set rectangle size of legend item.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.15.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__other__circle_chart_radius.html\">styleOtherCircleChartRadius</a></td>\n <td style=\"text-align: left\">4</td>\n <td style=\"text-align: left\"><a href=\"../options/style__other__circle_chart_radius.html#example-a\">A</a>, <a href=\"../options/style__other__circle_chart_radius.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set radius of circle.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">D.16.</td>\n <td style=\"text-align: left\"><a href=\"/options/style__other__range_x_text_rotation.html\">styleOtherRangeXTextRotation</a></td>\n <td style=\"text-align: left\">-45</td>\n <td style=\"text-align: left\"><a href=\"../options/style__other__range_x_text_rotation.html#example-a\">A</a>, <a href=\"../options/style__other__range_x_text_rotation.html#example-b\">B</a></td>\n <td style=\"text-align: left\">Set text rotation of the x axis.</td>\n </tr>\n </tbody>\n</table>\n\n","dir":"/options/","name":"README.md","path":"options/README.md","url":"/options/"},{"sort":3,"title":"32 Diagrams","layout":"page","content":"<h1 id=\"32-diagrams\">32 Diagrams</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n<h3 id=\"1-showtitle-a\">1. showTitle (A)</h3>\n\n<div id=\"example-1\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":true,\"viewDomId\":\"example-1\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-a\">More Details</a> | Show title</p>\n\n<h3 id=\"2-showtitle-b\">2. showTitle (B)</h3>\n\n<div id=\"example-2\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":false,\"viewDomId\":\"example-2\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-b\">More Details</a> | Hide title</p>\n\n<h3 id=\"3-showlegend-a\">3. showLegend (A)</h3>\n\n<div id=\"example-3\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"viewDomId\":\"example-3\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-a\">More Details</a> | Show legend</p>\n\n<h3 id=\"4-showlegend-b\">4. showLegend (B)</h3>\n\n<div id=\"example-4\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":false,\"viewDomId\":\"example-4\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-b\">More Details</a> | Hide legend</p>\n\n<h3 id=\"5-showlegend-c\">5. showLegend (C)</h3>\n\n<div id=\"example-5\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"showAverage\":false,\"viewDomId\":\"example-5\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-c\">More Details</a> | Hide legend</p>\n\n<h3 id=\"6-showaverage-a\">6. showAverage (A)</h3>\n\n<div id=\"example-6\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":true,\"viewDomId\":\"example-6\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-a\">More Details</a> | Show average Line</p>\n\n<h3 id=\"7-showaverage-b\">7. showAverage (B)</h3>\n\n<div id=\"example-7\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"viewDomId\":\"example-7\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-b\">More Details</a> | Hide average Line</p>\n\n<h3 id=\"8-showaverage-c\">8. showAverage (C)</h3>\n\n<div id=\"example-8\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"showDataAsCircle\":true,\"viewDomId\":\"example-8\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-c\">More Details</a> | Hide average Line as show data with as points</p>\n\n<h3 id=\"9-showrangeylog-a\">9. showRangeYLog (A)</h3>\n\n<div id=\"example-9\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showRangeYLog\":true,\"viewDomId\":\"example-9\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__range_y_log.html#example-a\">More Details</a> | Show Y Range in Log Scale</p>\n\n<h3 id=\"10-showrangeylog-b\">10. showRangeYLog (B)</h3>\n\n<div id=\"example-10\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showRangeYLog\":false,\"viewDomId\":\"example-10\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__range_y_log.html#example-b\">More Details</a> | Show Y Range in Linear Scale</p>\n\n<h3 id=\"11-showdataascircle-a\">11. showDataAsCircle (A)</h3>\n\n<div id=\"example-11\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":true,\"viewDomId\":\"example-11\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-a\">More Details</a> | Draw data with circles</p>\n\n<h3 id=\"12-showdataascircle-b\">12. showDataAsCircle (B)</h3>\n\n<div id=\"example-12\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":false,\"viewDomId\":\"example-12\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-b\">More Details</a> | Draw data with bars</p>\n\n<h3 id=\"13-showdataascircle-c\">13. showDataAsCircle (C)</h3>\n\n<div id=\"example-13\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":true,\"showAverage\":false,\"viewDomId\":\"example-13\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-c\">More Details</a> | Hide average Line as show data with as points</p>\n\n<h3 id=\"14-viewtitle-a\">14. viewTitle (A)</h3>\n\n<div id=\"example-14\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewTitle\":\"42\",\"viewDomId\":\"example-14\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__title.html#example-a\">More Details</a> | Change title to: “<code class=\"language-plaintext highlighter-rouge\">42</code>”</p>\n\n<h3 id=\"15-viewdomid-a\">15. viewDomId (A)</h3>\n\n<div id=\"example-15\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewDomId\":\"example-15\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__dom_id.html#example-a\">More Details</a> | Insert SVG into the DOM Element with the id: “<code class=\"language-plaintext highlighter-rouge\">findMe</code>”</p>\n\n<h3 id=\"16-viewmargintop-a\">16. viewMarginTop (A)</h3>\n\n<div id=\"example-16\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginTop\":0,\"viewDomId\":\"example-16\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__top.html#example-a\">More Details</a> | Set top margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"17-viewmargintop-b\">17. viewMarginTop (B)</h3>\n\n<div id=\"example-17\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginTop\":150,\"viewDomId\":\"example-17\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__top.html#example-b\">More Details</a> | Set top margin to: <code class=\"language-plaintext highlighter-rouge\">150</code></p>\n\n<h3 id=\"18-viewmarginright-a\">18. viewMarginRight (A)</h3>\n\n<div id=\"example-18\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginRight\":0,\"viewDomId\":\"example-18\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__right.html#example-a\">More Details</a> | Set right margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"19-viewmarginright-b\">19. viewMarginRight (B)</h3>\n\n<div id=\"example-19\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginRight\":200,\"viewDomId\":\"example-19\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__right.html#example-b\">More Details</a> | Set right margin to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"20-viewmarginbottom-a\">20. viewMarginBottom (A)</h3>\n\n<div id=\"example-20\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginBottom\":0,\"viewDomId\":\"example-20\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__bottom.html#example-a\">More Details</a> | Set bottom margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"21-viewmarginbottom-b\">21. viewMarginBottom (B)</h3>\n\n<div id=\"example-21\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginBottom\":200,\"viewDomId\":\"example-21\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__bottom.html#example-b\">More Details</a> | Set bottom margin to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"22-viewmarginleft-a\">22. viewMarginLeft (A)</h3>\n\n<div id=\"example-22\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginLeft\":0,\"viewDomId\":\"example-22\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__left.html#example-a\">More Details</a> | Set left margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n<h3 id=\"23-viewmarginleft-b\">23. viewMarginLeft (B)</h3>\n\n<div id=\"example-23\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginLeft\":200,\"viewDomId\":\"example-23\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__left.html#example-b\">More Details</a> | Set left margin to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"24-viewwidthouter-a\">24. viewWidthOuter (A)</h3>\n\n<div id=\"example-24\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewWidthOuter\":200,\"viewDomId\":\"example-24\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__width__outer.html#example-a\">More Details</a> | Set total width to: <code class=\"language-plaintext highlighter-rouge\">200</code></p>\n\n<h3 id=\"25-viewwidthouter-b\">25. viewWidthOuter (B)</h3>\n\n<div id=\"example-25\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewWidthOuter\":800,\"viewDomId\":\"example-25\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__width__outer.html#example-b\">More Details</a> | Set total width to: <code class=\"language-plaintext highlighter-rouge\">800</code></p>\n\n<h3 id=\"26-viewheightouter-a\">26. viewHeightOuter (A)</h3>\n\n<div id=\"example-26\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewHeightOuter\":100,\"viewDomId\":\"example-26\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__height__outer.html#example-a\">More Details</a> | Set total height to: <code class=\"language-plaintext highlighter-rouge\">100</code></p>\n\n<h3 id=\"27-viewheightouter-b\">27. viewHeightOuter (B)</h3>\n\n<div id=\"example-27\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewHeightOuter\":600,\"viewDomId\":\"example-27\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__height__outer.html#example-b\">More Details</a> | Set total height to: <code class=\"language-plaintext highlighter-rouge\">600</code></p>\n\n<h3 id=\"28-viewtranslatemultiplicator-a\">28. viewTranslateMultiplicator (A)</h3>\n\n<div id=\"example-28\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewTranslateMultiplicator\":0.42,\"viewDomId\":\"example-28\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__translate__multiplicator.html#example-a\">More Details</a> | Change distance between title, legend and diagram to: <code class=\"language-plaintext highlighter-rouge\">0.42</code></p>\n\n<h3 id=\"29-viewtranslatemultiplicator-b\">29. viewTranslateMultiplicator (B)</h3>\n\n<div id=\"example-29\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewTranslateMultiplicator\":2.42,\"viewDomId\":\"example-29\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__translate__multiplicator.html#example-b\">More Details</a> | Change distance between title, legend and diagram to: <code class=\"language-plaintext highlighter-rouge\">2.42</code></p>\n\n<h3 id=\"30-dataxselectors-a\">30. dataXSelectors (A)</h3>\n\n<div id=\"example-30\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXSelectors\":[\"Data\"],\"showAverage\":false,\"viewDomId\":\"example-30\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__selectors.html#example-a\">More Details</a> | Selection is set to: <code class=\"language-plaintext highlighter-rouge\">[\"Data\"]</code></p>\n\n<h3 id=\"31-dataxselectors-b\">31. dataXSelectors (B)</h3>\n\n<div id=\"example-31\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXSelectors\":[\"Spock\",\"Data\"],\"viewDomId\":\"example-31\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__selectors.html#example-b\">More Details</a> | Multiple selections are set: <code class=\"language-plaintext highlighter-rouge\">[\"Spock\", \"Data\"]</code></p>\n\n<h3 id=\"32-dataxtextlength-a\">32. dataXTextLength (A)</h3>\n\n<div id=\"example-32\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"dataXTextLength\":5,\"viewDomId\":\"example-32\"})\n\t</script>\n</div>\n<p><a href=\"../options/data__x__text__length.html#example-a\">More Details</a> | Set the maximum text label length for x range values to: <code class=\"language-plaintext highlighter-rouge\">5</code></p>\n\n","dir":"/benchmarks/","name":"benchmark-3.md","path":"benchmarks/benchmark-3.md","url":"/benchmarks/benchmark-3.html"},{"sort":3,"title":"Select and change position of columns","layout":"page","content":"# Select and change position of columns\n\n## Result\n\n<div id=\"data-result\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataXSelectors\" : [\"Data\", \"Spock\"],\n \"dataSortSelection\" : \"start\",\n \"showAverage\" : false,\n \"viewDomId\" : \"data-result\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataXSelectors\" : [\"Data\", \"Spock\"],\n \"dataSortSelection\" : \"start\",\n \"showAverage\" : false\n }\n )\n } \n )\n </script>\n</body>\n```\n\n## Steps\n\nWe need following files.\n\n| **Name** | **Source** | **Description** |\n| d3.js | [https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js](https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js) | d3.js Library | \n| statosio.js | [../libs/statosio.js](/libs/statosio.js) | statosio.js Library | \n| performance.json | [../data/performance.json](/data/performance.json) | Dataset |\n\n- statosio.js Structure\n\n```javascript\nd3.statosio( source, x, y, options )\n``````\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | ```[{},{}...]``` | Array of Objects |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array of Strings or String |\n| **Options** | ```{}``` | Object |\n\n\n### 1: HTML Structure\nSet HTML Structure\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n</head>\n<body>\n</body>\n```\n\n### 2: Load d3.js\nInsert ```<script>``` Element to load d3.js library.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n</head>\n<body>\n</body>\n```\n\n### 3: Load statosio.js\nInsert ```<script>``` Element to load statosio.js.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n</body>\n\n```\n[Source Code](/libs/statosio.js)\n\n\n### 4: Load dataset\nd3.js expect a json array with object in it: ```[ {},{}...]```\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n\n } \n )\n </script>\n</body>\n```\n[Example Dataset](/data/performance.json)\n\n### 5: Set dataset ranges\nLoad diagram\n\n- intermediate result\n<div id=\"dataset-range\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"viewDomId\" : \"dataset-range\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n {}\n )\n } \n )\n </script>\n</body>\n```\n\n[Example Dataset](/data/performance.json)\n\n### 6: Add \"data\" options\n\n- intermediate result\n<div id=\"intermediate-data\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataXSelectors\" : [\"Data\", \"Spock\"],\n \"dataSortSelection\" : \"start\",\n \"viewDomId\" : \"intermediate-data\",\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataXSelectors\" : [\"Data\", \"Spock\"],\n \"dataSortSelection\" : \"start\"\n }\n )\n } \n )\n </script>\n</body>\n```\n\n- Option explained\n\n| **Name** | **Description** | **Details** | \n| [dataXSelectors](../options/data__x__selectors.html) | Expect one or more names which are included in the x range. | [\"Data\", \"Spock\"] |\n| [dataSortSelection](../options/data__sort__selection.html) | Change position of your selection. You can choose between \"start\", \"end\" and \"none\" | \"start\" |\n\nList of all \"data\" Options: [here](../options/index.html#data)\n\n\n### 7: Add \"show\" options\n\n- intermediate result\n<div id=\"intermediate-show\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataXSelectors\" : [\"Data\", \"Spock\"],\n \"dataSortSelection\" : \"start\",\n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataXSelectors\" : [\"Data\", \"Spock\"],\n \"dataSortSelection\" : \"start\",\n \"showAverage\" : false,\n }\n )\n } \n )\n </script>\n</body>\n```\n\n- Option explained\n\n| **Name** | **Description** | **Details** | \n| [showAverage](../options/show__average.html) | Calculate and show average line | false |\n\nList of all \"show\" Options: [here](../options/index.html#show)\n\n\n\n","dir":"/tutorials/","name":"select-data.md","path":"tutorials/select-data.md","url":"/tutorials/select-data.html"},{"sort":3,"permalink":"/benchmarks/","layout":"page","title":"Benchmark","content":"<h1 id=\"benchmark\">Benchmark</h1>\n\n<p>Speedtest</p>\n\n<ul>\n <li><a href=\"/benchmarks/benchmark-2.html\">64 Diagrams</a></li>\n <li><a href=\"/benchmarks/benchmark-3.html\">32 Diagrams</a></li>\n <li><a href=\"/benchmarks/benchmark-4.html\">16 Diagrams</a></li>\n <li><a href=\"/benchmarks/benchmark-5.html\">8 Diagrams</a></li>\n <li><a href=\"/benchmarks/benchmark-6.html\">4 Diagrams</a></li>\n <li><a href=\"/benchmarks/benchmark-7.html\">2 Diagrams</a></li>\n <li><a href=\"/benchmarks/benchmark-8.html\">1 Diagram</a></li>\n <li><a href=\"/benchmarks/benchmark-9.html\">0 Diagrams</a></li>\n</ul>\n","dir":"/benchmarks/","name":"README.md","path":"benchmarks/README.md","url":"/benchmarks/"},{"sort":3,"title":"A.3. showAverage","layout":"page","content":"# showAverage\n\nCalculate and show average line\n\n\n## Specification\n\nDefault implementation: ```{ showAverage : true }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```showAverage```| ```show__average```| [Show](../options/#show) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| ```true```| ```^(?:true|false)```| Boolean |\n\n\n\n## Example A.\n\nShow average Line\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : true, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showAverage--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showAverage.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showAverage\" : true }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : true }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showAverage</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : true }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showAverage\"=>true}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nHide average Line\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : false, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showAverage--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showAverage.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showAverage\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showAverage</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showAverage\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example C.\n\nHide average Line as show data with as points\n\n### Output\n\n <div id=\"c\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : false, \"showDataAsCircle\" : true, \"view__dom_id\" : \"c\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showAverage--example-c.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showAverage.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showAverage\" : false, \"showDataAsCircle\" : true }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : false, \"showDataAsCircle\" : true }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showAverage</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showAverage\" : false, \"showDataAsCircle\" : true }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showAverage\"=>false, \"showDataAsCircle\"=>true}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"show__average.md","path":"options/show__average.md","url":"/options/show__average.html"},{"sort":4,"title":"A.4. showRangeYLog","layout":"page","content":"# showRangeYLog\n\nCalculate and show range y in a log scale.\n\n\n## Specification\n\nDefault implementation: ```{ showRangeYLog : false }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```showRangeYLog```| ```show__range_y_log```| [Show](../options/#show) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| ```false```| ```^(?:true|false)```| Boolean |\n\n\n\n## Example A.\n\nShow Y Range in Log Scale\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showRangeYLog\" : true, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showRangeYLog--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showRangeYLog.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showRangeYLog\" : true }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showRangeYLog\" : true }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showRangeYLog</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showRangeYLog\" : true }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showRangeYLog\"=>true}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nShow Y Range in Linear Scale\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showRangeYLog\" : false, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showRangeYLog--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showRangeYLog.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showRangeYLog\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showRangeYLog\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showRangeYLog</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showRangeYLog\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showRangeYLog\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"show__range_y_log.md","path":"options/show__range_y_log.md","url":"/options/show__range_y_log.html"},{"sort":4,"title":"16 Diagrams","layout":"page","content":"<h1 id=\"16-diagrams\">16 Diagrams</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n<h3 id=\"1-showtitle-a\">1. showTitle (A)</h3>\n\n<div id=\"example-1\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":true,\"viewDomId\":\"example-1\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-a\">More Details</a> | Show title</p>\n\n<h3 id=\"2-showtitle-b\">2. showTitle (B)</h3>\n\n<div id=\"example-2\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":false,\"viewDomId\":\"example-2\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-b\">More Details</a> | Hide title</p>\n\n<h3 id=\"3-showlegend-a\">3. showLegend (A)</h3>\n\n<div id=\"example-3\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"viewDomId\":\"example-3\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-a\">More Details</a> | Show legend</p>\n\n<h3 id=\"4-showlegend-b\">4. showLegend (B)</h3>\n\n<div id=\"example-4\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":false,\"viewDomId\":\"example-4\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-b\">More Details</a> | Hide legend</p>\n\n<h3 id=\"5-showlegend-c\">5. showLegend (C)</h3>\n\n<div id=\"example-5\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"showAverage\":false,\"viewDomId\":\"example-5\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-c\">More Details</a> | Hide legend</p>\n\n<h3 id=\"6-showaverage-a\">6. showAverage (A)</h3>\n\n<div id=\"example-6\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":true,\"viewDomId\":\"example-6\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-a\">More Details</a> | Show average Line</p>\n\n<h3 id=\"7-showaverage-b\">7. showAverage (B)</h3>\n\n<div id=\"example-7\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"viewDomId\":\"example-7\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-b\">More Details</a> | Hide average Line</p>\n\n<h3 id=\"8-showaverage-c\">8. showAverage (C)</h3>\n\n<div id=\"example-8\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"showDataAsCircle\":true,\"viewDomId\":\"example-8\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-c\">More Details</a> | Hide average Line as show data with as points</p>\n\n<h3 id=\"9-showrangeylog-a\">9. showRangeYLog (A)</h3>\n\n<div id=\"example-9\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showRangeYLog\":true,\"viewDomId\":\"example-9\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__range_y_log.html#example-a\">More Details</a> | Show Y Range in Log Scale</p>\n\n<h3 id=\"10-showrangeylog-b\">10. showRangeYLog (B)</h3>\n\n<div id=\"example-10\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showRangeYLog\":false,\"viewDomId\":\"example-10\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__range_y_log.html#example-b\">More Details</a> | Show Y Range in Linear Scale</p>\n\n<h3 id=\"11-showdataascircle-a\">11. showDataAsCircle (A)</h3>\n\n<div id=\"example-11\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":true,\"viewDomId\":\"example-11\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-a\">More Details</a> | Draw data with circles</p>\n\n<h3 id=\"12-showdataascircle-b\">12. showDataAsCircle (B)</h3>\n\n<div id=\"example-12\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":false,\"viewDomId\":\"example-12\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-b\">More Details</a> | Draw data with bars</p>\n\n<h3 id=\"13-showdataascircle-c\">13. showDataAsCircle (C)</h3>\n\n<div id=\"example-13\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showDataAsCircle\":true,\"showAverage\":false,\"viewDomId\":\"example-13\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__data_as_circle.html#example-c\">More Details</a> | Hide average Line as show data with as points</p>\n\n<h3 id=\"14-viewtitle-a\">14. viewTitle (A)</h3>\n\n<div id=\"example-14\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewTitle\":\"42\",\"viewDomId\":\"example-14\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__title.html#example-a\">More Details</a> | Change title to: “<code class=\"language-plaintext highlighter-rouge\">42</code>”</p>\n\n<h3 id=\"15-viewdomid-a\">15. viewDomId (A)</h3>\n\n<div id=\"example-15\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewDomId\":\"example-15\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__dom_id.html#example-a\">More Details</a> | Insert SVG into the DOM Element with the id: “<code class=\"language-plaintext highlighter-rouge\">findMe</code>”</p>\n\n<h3 id=\"16-viewmargintop-a\">16. viewMarginTop (A)</h3>\n\n<div id=\"example-16\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"viewMarginTop\":0,\"viewDomId\":\"example-16\"})\n\t</script>\n</div>\n<p><a href=\"../options/view__margin__top.html#example-a\">More Details</a> | Set top margin to: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n","dir":"/benchmarks/","name":"benchmark-4.md","path":"benchmarks/benchmark-4.md","url":"/benchmarks/benchmark-4.html"},{"sort":4,"title":"Sort Dataset by values","layout":"page","content":"# Sort dataset by values\n\n## Result\n\n<div id=\"dataset-result\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataSortCurrent\" : \"values\", \n \"dataSortByValues\" : \"ascending\", \n \"showAverage\" : false,\n \"viewDomId\" : \"dataset-result\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataSortCurrent\" : \"values\", \n \"dataSortByValues\" : \"ascending\", \n \"showAverage\" : false,\n }\n )\n } \n )\n </script>\n</body>\n```\n\n\n## Steps\n\nWe need following files.\n\n| **Name** | **Source** | **Description** |\n| d3.js | [https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js](https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js) | d3.js Library | \n| statosio.js | [../libs/statosio.js](/libs/statosio.js) | statosio.js Library | \n| performance.json | [../data/performance.json](/data/performance.json) | Dataset |\n\n- statosio.js Structure\n\n```javascript\nd3.statosio( source, x, y, options )\n``````\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | ```[{},{}...]``` | Array of Objects |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array of Strings or String |\n| **Options** | ```{}``` | Object |\n\n### 1: HTML Structure\nSet HTML Structure\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n</head>\n<body>\n</body>\n```\n\n### 2: Load d3.js\nInsert ```<script>``` Element to load d3.js library.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n</head>\n<body>\n</body>\n```\n\n### 3: Load statosio.js\nInsert ```<script>``` Element to load statosio.js.\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n</body>\n\n```\n[Source Code](/libs/statosio.js)\n\n\n### 4: Load dataset\nd3.js expect a json array with object in it: ```[ {},{}...]```\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n\n } \n )\n </script>\n</body>\n```\n[Example Dataset](/data/performance.json)\n\n### 5: Set dataset ranges\nLoad diagram\n\n- intermediate result\n<div id=\"dataset-range\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"viewDomId\" : \"dataset-range\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n {}\n )\n } \n )\n </script>\n</body>\n```\n\n[Example Dataset](/data/performance.json)\n\n\n### 6: Add \"data\" options\n\n- intermediate result\n<div id=\"intermediate-data\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataSortCurrent\" : \"values\", \n \"dataSortByValues\" : \"ascending\", \n \"viewDomId\" : \"intermediate-data\" \n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataSortCurrent\" : \"values\", \n \"dataSortByValues\" : \"ascending\"\n }\n )\n } \n )\n </script>\n</body>\n```\n\n- Option explained\n\n| **Name** | **Description** | **Details** | \n| [dataSortCurrent](../options/data__sort__current.html) | Set the general route for sorting. You can choose between \"none\", \"values\", \"names\". | \"values\" |\n| [dataSortByValues](../options/data__sort__by__values.html) | Here you can set type of sorting. You can choose between \"ascending\" and \"decending\" | \"ascending\" |\n\nList of all \"data\" Options: [here](../options/index.html#data)\n\n\n### 7: Add \"show\" options\n\n- intermediate result\n<div id=\"intermediate-show\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataSortCurrent\" : \"values\", \n \"dataSortByValues\" : \"ascending\", \n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\"\n }\n )\n </script>\n</div>\n\n```html\n<!DOCTYPE html>\n<head>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"../libs/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"dataSortCurrent\" : \"values\", \n \"dataSortByValues\" : \"ascending\", \n \"showAverage\" : false,\n }\n )\n } \n )\n </script>\n</body>\n```\n\n- Option explained\n\n| **Name** | **Description** | **Details** | \n| [showAverage](../options/show__average.html) | Calculate and show average line | false |\n\nList of all \"show\" Options: [here](../options/index.html#show)","dir":"/tutorials/","name":"sort-data.md","path":"tutorials/sort-data.md","url":"/tutorials/sort-data.html"},{"sort":5,"title":"Change style to dark-mode","layout":"page","content":"<h1 id=\"change-style-to-dark-mode\">Change style to dark-mode</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<div id=\"bar\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"styleColorSelectorsChart\": [\"#E2B08E\", \"#CC8074\"],\n \"styleColorCanvasBackground\" : \"none\",\n \"styleColorGridline\" : \"#2F3138\",\n \"styleStrokeGridline\" : 1,\n \"styleColorFont\" : \"#BABABA\",\n \"styleColorSelectorsText\" : [\"#E2B08E\", \"#BABABA\"],\n \"showAverage\" : false,\n \"viewDomId\" : \"bar\"\n }\n )\n </script>\n</div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"../libs/statosio.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;script&gt;</span>\n        <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">(</span> <span class=\"dl\">\"</span><span class=\"s2\">../data/performance.json</span><span class=\"dl\">\"</span> <span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"p\">(</span> <span class=\"nx\">file</span> <span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n                <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">statosio</span><span class=\"p\">(</span> \n                    <span class=\"nx\">file</span><span class=\"p\">,</span> \n                    <span class=\"dl\">\"</span><span class=\"s2\">name</span><span class=\"dl\">\"</span><span class=\"p\">,</span> \n                    <span class=\"p\">[</span> <span class=\"dl\">\"</span><span class=\"s2\">mobile</span><span class=\"dl\">\"</span> <span class=\"p\">],</span> \n                    <span class=\"p\">{</span> \n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorSelectorsChart</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">#E2B08E</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">#CC8074</span><span class=\"dl\">\"</span><span class=\"p\">],</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorCanvasBackground</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">none</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorGridline</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#2F3138</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleStrokeGridline</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorFont</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#BABABA</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorSelectorsText</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">#E2B08E</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">#BABABA</span><span class=\"dl\">\"</span><span class=\"p\">],</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">showAverage</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"kc\">false</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span> \n        <span class=\"p\">)</span>\n    <span class=\"nt\">&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"steps\">Steps</h2>\n\n<p>We need following files.</p>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Source</strong></td>\n <td><strong>Description</strong></td>\n </tr>\n <tr>\n <td>d3.js</td>\n <td><a href=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\">https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js</a></td>\n <td>d3.js Library</td>\n </tr>\n <tr>\n <td>statosio.js</td>\n <td><a href=\"/libs/statosio.js\">../libs/statosio.js</a></td>\n <td>statosio.js Library</td>\n </tr>\n <tr>\n <td>performance.json</td>\n <td><a href=\"/data/performance.json\">../data/performance.json</a></td>\n <td>Dataset</td>\n </tr>\n </tbody>\n</table>\n\n<ul>\n <li>statosio.js Structure</li>\n</ul>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">statosio</span><span class=\"p\">(</span> <span class=\"nx\">source</span><span class=\"p\">,</span> <span class=\"nx\">x</span><span class=\"p\">,</span> <span class=\"nx\">y</span><span class=\"p\">,</span> <span class=\"nx\">options</span> <span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: right\"> </th>\n <th style=\"text-align: left\"><strong>Value</strong></th>\n <th style=\"text-align: left\"><strong>Type</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: right\"><strong>Source</strong></td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[{},{}...]</code></td>\n <td style=\"text-align: left\">Array of Objects</td>\n </tr>\n <tr>\n <td style=\"text-align: right\"><strong>X</strong></td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"name\"</code></td>\n <td style=\"text-align: left\">String</td>\n </tr>\n <tr>\n <td style=\"text-align: right\"><strong>Y</strong></td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[ \"mobile\" ]</code></td>\n <td style=\"text-align: left\">Array of Strings or String</td>\n </tr>\n <tr>\n <td style=\"text-align: right\"><strong>Options</strong></td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{}</code></td>\n <td style=\"text-align: left\">Object</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"1-html-structure\">1: HTML Structure</h3>\n<p>Set HTML Structure</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>  </div></div>\n\n<h3 id=\"2-load-d3js\">2: Load d3.js</h3>\n<p>Insert <code class=\"language-plaintext highlighter-rouge\">&lt;script&gt;</code> Element to load d3.js library.</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>  </div></div>\n\n<h3 id=\"3-load-statosiojs\">3: Load statosio.js</h3>\n<p>Insert <code class=\"language-plaintext highlighter-rouge\">&lt;script&gt;</code> Element to load statosio.js.</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"../libs/statosio.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n\n</code></pre>  </div></div>\n<p><a href=\"/libs/statosio.js\">Source Code</a></p>\n\n<h3 id=\"4-load-dataset\">4: Load dataset</h3>\n<p>d3.js expect a json array with object in it: <code class=\"language-plaintext highlighter-rouge\">[ {},{}...]</code></p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"../libs/statosio.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;script&gt;</span>\n        <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">(</span> <span class=\"dl\">\"</span><span class=\"s2\">../data/performance.json</span><span class=\"dl\">\"</span> <span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"p\">(</span> <span class=\"nx\">file</span> <span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\n            <span class=\"p\">}</span> \n        <span class=\"p\">)</span>\n    <span class=\"nt\">&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>  </div></div>\n<p><a href=\"/data/performance.json\">Example Dataset</a></p>\n\n<h3 id=\"5-set-dataset-ranges\">5: Set dataset ranges</h3>\n<p>Load diagram</p>\n\n<ul>\n <li>intermediate result</li>\n</ul>\n<div id=\"dataset-range\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"viewDomId\" : \"dataset-range\"\n }\n )\n </script>\n</div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"../libs/statosio.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;script&gt;</span>\n        <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">(</span> <span class=\"dl\">\"</span><span class=\"s2\">../data/performance.json</span><span class=\"dl\">\"</span> <span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"p\">(</span> <span class=\"nx\">file</span> <span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n                <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">statosio</span><span class=\"p\">(</span> \n                    <span class=\"nx\">file</span><span class=\"p\">,</span> \n                    <span class=\"dl\">\"</span><span class=\"s2\">name</span><span class=\"dl\">\"</span><span class=\"p\">,</span> \n                    <span class=\"p\">[</span> <span class=\"dl\">\"</span><span class=\"s2\">mobile</span><span class=\"dl\">\"</span> <span class=\"p\">],</span> \n                    <span class=\"p\">{}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span> \n        <span class=\"p\">)</span>\n    <span class=\"nt\">&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>  </div></div>\n\n<p><a href=\"/data/performance.json\">Example Dataset</a></p>\n\n<h3 id=\"6-add-style-options\">6: Add “style” options</h3>\n\n<ul>\n <li>intermediate result</li>\n</ul>\n<div id=\"intermediate-style\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"styleColorSelectorsChart\": [\"#E2B08E\", \"#CC8074\"],\n \"styleColorCanvasBackground\" : \"none\",\n \"styleColorGridline\" : \"#2F3138\",\n \"styleStrokeGridline\" : 1,\n \"styleColorFont\" : \"#BABABA\",\n \"styleColorSelectorsText\" : [\"#E2B08E\", \"#BABABA\"],\n \"viewDomId\" : \"intermediate-style\" \n }\n )\n </script>\n</div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"../libs/statosio.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;script&gt;</span>\n        <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">(</span> <span class=\"dl\">\"</span><span class=\"s2\">../data/performance.json</span><span class=\"dl\">\"</span> <span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"p\">(</span> <span class=\"nx\">file</span> <span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n                <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">statosio</span><span class=\"p\">(</span> \n                    <span class=\"nx\">file</span><span class=\"p\">,</span> \n                    <span class=\"dl\">\"</span><span class=\"s2\">name</span><span class=\"dl\">\"</span><span class=\"p\">,</span> \n                    <span class=\"p\">[</span> <span class=\"dl\">\"</span><span class=\"s2\">mobile</span><span class=\"dl\">\"</span> <span class=\"p\">],</span> \n                    <span class=\"p\">{</span> \n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorSelectorsChart</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">#E2B08E</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">#CC8074</span><span class=\"dl\">\"</span><span class=\"p\">],</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorCanvasBackground</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">none</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorGridline</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#2F3138</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleStrokeGridline</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorFont</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#BABABA</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorSelectorsText</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">#E2B08E</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">#BABABA</span><span class=\"dl\">\"</span><span class=\"p\">]</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span> \n        <span class=\"p\">)</span>\n    <span class=\"nt\">&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>Colors in use.</li>\n</ul>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Color</strong></td>\n <td><strong>Hex</strong></td>\n <td><strong>Used for</strong></td>\n </tr>\n <tr>\n <td><svg width=\"20\" height=\"20\"><rect width=\"20\" height=\"20\" style=\"fill:#E2B08E;stroke-width:3;stroke:rgb(0,0,0)\"></rect></svg></td>\n <td>#E2B08E</td>\n <td>Highlight bar chart color</td>\n </tr>\n <tr>\n <td><svg width=\"20\" height=\"20\"><rect width=\"20\" height=\"20\" style=\"fill:#CC8074;stroke-width:3;stroke:rgb(0,0,0)\"></rect></svg></td>\n <td>#CC8074</td>\n <td>Default bar chart color</td>\n </tr>\n <tr>\n <td><svg width=\"20\" height=\"20\"><rect width=\"20\" height=\"20\" style=\"fill:#2F3138;stroke-width:3;stroke:none\"></rect></svg></td>\n <td>#2F3138</td>\n <td>Gridline Color</td>\n </tr>\n <tr>\n <td><svg width=\"20\" height=\"20\"><rect width=\"20\" height=\"20\" style=\"fill:#BABABA;stroke-width:3;stroke:rgb(0,0,0)\"></rect></svg></td>\n <td>#BABABA</td>\n <td>Default text color</td>\n </tr>\n </tbody>\n</table>\n\n<ul>\n <li>Options explained</li>\n</ul>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Description</strong></td>\n <td><strong>Details</strong></td>\n </tr>\n <tr>\n <td><a href=\"../options/style__color__selectors__chart.html\">styleColorSelectorsChart</a></td>\n <td>Colorize the chart of the selection. Use “hex” values or “html” color-names.</td>\n <td>[“#E2B08E”, “#CC8074”]</td>\n </tr>\n <tr>\n <td><a href=\"../options/style__color__canvas_background.html\">styleColorCanvasBackground</a></td>\n <td>Set background color.</td>\n <td>“none”</td>\n </tr>\n <tr>\n <td><a href=\"../options/style__color__gridline.html\">styleColorGridline</a></td>\n <td>Set the gridline color. Use “hex” value or “html” color-names.</td>\n <td>“#2F3138”</td>\n </tr>\n <tr>\n <td><a href=\"../options/style__stroke__gridline.html\">styleStrokeGridline</a></td>\n <td>Set stroke weight of gridline.</td>\n <td>1</td>\n </tr>\n <tr>\n <td><a href=\"../options/style__color__font.html\">styleColorFont</a></td>\n <td>Set default font color. Excluding non-selection content.</td>\n <td>“#BABABA”</td>\n </tr>\n <tr>\n <td><a href=\"../options/style__color__selectors__text.html\">styleColorSelectorsText</a></td>\n <td>Colorize the font of the selection. Use “hex” values or “html” color-names.</td>\n <td>[“#E2B08E”, “#BABABA”]</td>\n </tr>\n </tbody>\n</table>\n\n<p>List of all “style” Options: <a href=\"../options/index.html#style\">here</a></p>\n\n<h3 id=\"7-add-show-options\">7: Add “show” options</h3>\n\n<ul>\n <li>intermediate result</li>\n</ul>\n<div id=\"intermediate-show\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \n \"styleColorSelectorsChart\": [\"#E2B08E\", \"#CC8074\"],\n \"styleColorCanvasBackground\" : \"none\",\n \"styleColorGridline\" : \"#2F3138\",\n \"styleStrokeGridline\" : 1,\n \"styleColorFont\" : \"#BABABA\",\n \"styleColorSelectorsText\" : [\"#E2B08E\", \"#BABABA\"],\n \"showAverage\" : false,\n \"viewDomId\" : \"intermediate-show\" \n }\n )\n </script>\n</div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html;charset=utf-8\"</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"../libs/statosio.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;script&gt;</span>\n        <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">(</span> <span class=\"dl\">\"</span><span class=\"s2\">../data/performance.json</span><span class=\"dl\">\"</span> <span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"p\">(</span> <span class=\"nx\">file</span> <span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n                <span class=\"nx\">d3</span><span class=\"p\">.</span><span class=\"nx\">statosio</span><span class=\"p\">(</span> \n                    <span class=\"nx\">file</span><span class=\"p\">,</span> \n                    <span class=\"dl\">\"</span><span class=\"s2\">name</span><span class=\"dl\">\"</span><span class=\"p\">,</span> \n                    <span class=\"p\">[</span> <span class=\"dl\">\"</span><span class=\"s2\">mobile</span><span class=\"dl\">\"</span> <span class=\"p\">],</span> \n                    <span class=\"p\">{</span> \n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorSelectorsChart</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">#E2B08E</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">#CC8074</span><span class=\"dl\">\"</span><span class=\"p\">],</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorCanvasBackground</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">none</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorGridline</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#2F3138</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleStrokeGridline</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorFont</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#BABABA</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">styleColorSelectorsText</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">#E2B08E</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">#BABABA</span><span class=\"dl\">\"</span><span class=\"p\">],</span>\n                        <span class=\"dl\">\"</span><span class=\"s2\">showAverage</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"kc\">false</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span> \n        <span class=\"p\">)</span>\n    <span class=\"nt\">&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>Option explained</li>\n</ul>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Description</strong></td>\n <td><strong>Details</strong></td>\n </tr>\n <tr>\n <td><a href=\"../options/show__average.html\">showAverage</a></td>\n <td>Calculate and show average line</td>\n <td>false</td>\n </tr>\n </tbody>\n</table>\n\n<p>List of all “show” Options: <a href=\"../options/index.html#show\">here</a></p>\n","dir":"/tutorials/","name":"change-style.md","path":"tutorials/change-style.md","url":"/tutorials/change-style.html"},{"sort":5,"title":"A.5. showDataAsCircle","layout":"page","content":"# showDataAsCircle\n\nShow data as circles instead of rectangles. Only for not stacked diagram available.\n\n\n## Specification\n\nDefault implementation: ```{ showDataAsCircle : false }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```showDataAsCircle```| ```show__data_as_circle```| [Show](../options/#show) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| ```false```| ```^(?:true|false)```| Boolean |\n\n\n\n## Example A.\n\nDraw data with circles\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showDataAsCircle--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showDataAsCircle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showDataAsCircle\" : true }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showDataAsCircle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showDataAsCircle\"=>true}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nDraw data with bars\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : false, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showDataAsCircle--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showDataAsCircle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showDataAsCircle\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showDataAsCircle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showDataAsCircle\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example C.\n\nHide average Line as show data with as points\n\n### Output\n\n <div id=\"c\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"showAverage\" : false, \"view__dom_id\" : \"c\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/showDataAsCircle--example-c.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/showDataAsCircle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showDataAsCircle\" : true, \"showAverage\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"showAverage\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - showDataAsCircle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"showAverage\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showDataAsCircle\"=>true, \"showAverage\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"show__data_as_circle.md","path":"options/show__data_as_circle.md","url":"/options/show__data_as_circle.html"},{"sort":5,"title":"8 Diagrams","layout":"page","content":"<h1 id=\"8-diagrams\">8 Diagrams</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n<h3 id=\"1-showtitle-a\">1. showTitle (A)</h3>\n\n<div id=\"example-1\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":true,\"viewDomId\":\"example-1\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-a\">More Details</a> | Show title</p>\n\n<h3 id=\"2-showtitle-b\">2. showTitle (B)</h3>\n\n<div id=\"example-2\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":false,\"viewDomId\":\"example-2\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-b\">More Details</a> | Hide title</p>\n\n<h3 id=\"3-showlegend-a\">3. showLegend (A)</h3>\n\n<div id=\"example-3\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"viewDomId\":\"example-3\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-a\">More Details</a> | Show legend</p>\n\n<h3 id=\"4-showlegend-b\">4. showLegend (B)</h3>\n\n<div id=\"example-4\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":false,\"viewDomId\":\"example-4\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-b\">More Details</a> | Hide legend</p>\n\n<h3 id=\"5-showlegend-c\">5. showLegend (C)</h3>\n\n<div id=\"example-5\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"showAverage\":false,\"viewDomId\":\"example-5\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-c\">More Details</a> | Hide legend</p>\n\n<h3 id=\"6-showaverage-a\">6. showAverage (A)</h3>\n\n<div id=\"example-6\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":true,\"viewDomId\":\"example-6\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-a\">More Details</a> | Show average Line</p>\n\n<h3 id=\"7-showaverage-b\">7. showAverage (B)</h3>\n\n<div id=\"example-7\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"viewDomId\":\"example-7\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-b\">More Details</a> | Hide average Line</p>\n\n<h3 id=\"8-showaverage-c\">8. showAverage (C)</h3>\n\n<div id=\"example-8\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showAverage\":false,\"showDataAsCircle\":true,\"viewDomId\":\"example-8\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__average.html#example-c\">More Details</a> | Hide average Line as show data with as points</p>\n\n","dir":"/benchmarks/","name":"benchmark-5.md","path":"benchmarks/benchmark-5.md","url":"/benchmarks/benchmark-5.html"},{"sort":6,"title":"4 Diagrams","layout":"page","content":"<h1 id=\"4-diagrams\">4 Diagrams</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n<h3 id=\"1-showtitle-a\">1. showTitle (A)</h3>\n\n<div id=\"example-1\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":true,\"viewDomId\":\"example-1\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-a\">More Details</a> | Show title</p>\n\n<h3 id=\"2-showtitle-b\">2. showTitle (B)</h3>\n\n<div id=\"example-2\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":false,\"viewDomId\":\"example-2\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-b\">More Details</a> | Hide title</p>\n\n<h3 id=\"3-showlegend-a\">3. showLegend (A)</h3>\n\n<div id=\"example-3\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":true,\"viewDomId\":\"example-3\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-a\">More Details</a> | Show legend</p>\n\n<h3 id=\"4-showlegend-b\">4. showLegend (B)</h3>\n\n<div id=\"example-4\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\",\"desktop\"],{\"showLegend\":false,\"viewDomId\":\"example-4\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__legend.html#example-b\">More Details</a> | Hide legend</p>\n\n","dir":"/benchmarks/","name":"benchmark-6.md","path":"benchmarks/benchmark-6.md","url":"/benchmarks/benchmark-6.html"},{"sort":6,"title":"B.1. viewTitle","layout":"page","content":"# viewTitle\n\nSet title content.\n\n```note\nHtml styling is supported use \"style\" category instead for changing the look.\n```\n\n\n## Specification\n\nDefault implementation: ```{ viewTitle : Statosio Demo }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewTitle```| ```view__title```| [View](../options/#view) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```\"Statosio Demo\"```| ```^[a-zA-Z0-9]*$```| String |\n\n\n\n## Example A.\n\nChange title to: \"```42```\"\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTitle\" : \"42\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewTitle--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewTitle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewTitle\" : \"42\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTitle\" : \"42\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewTitle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTitle\" : \"42\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewTitle\"=>\"42\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__title.md","path":"options/view__title.md","url":"/options/view__title.html"},{"sort":7,"title":"B.2. viewDomId","layout":"page","content":"# viewDomId\n\nSet id from the <div> Element which holds the d3 content inside.\n\n\n## Specification\n\nDefault implementation: ```{ viewDomId : d3_statosio }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewDomId```| ```view__dom_id```| [View](../options/#view) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value, use _ for space.\n\n| **Default**| **Validation**| **Type** |\n| ```\"d3_statosio\"```| ```^[a-zA-Z0-9_]*$```| String |\n\n\n\n## Example A.\n\nInsert SVG into the DOM Element with the id: \"```findMe```\"\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewDomId\" : \"findMe\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewDomId--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewDomId.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewDomId\" : \"findMe\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewDomId\" : \"findMe\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewDomId</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewDomId\" : \"findMe\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewDomId\"=>\"findMe\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__dom_id.md","path":"options/view__dom_id.md","url":"/options/view__dom_id.html"},{"sort":7,"title":"2 Diagrams","layout":"page","content":"<h1 id=\"2-diagrams\">2 Diagrams</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n<h3 id=\"1-showtitle-a\">1. showTitle (A)</h3>\n\n<div id=\"example-1\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":true,\"viewDomId\":\"example-1\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-a\">More Details</a> | Show title</p>\n\n<h3 id=\"2-showtitle-b\">2. showTitle (B)</h3>\n\n<div id=\"example-2\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":false,\"viewDomId\":\"example-2\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-b\">More Details</a> | Hide title</p>\n\n","dir":"/benchmarks/","name":"benchmark-7.md","path":"benchmarks/benchmark-7.md","url":"/benchmarks/benchmark-7.html"},{"sort":8,"title":"B.3. viewMarginTop","layout":"page","content":"# viewMarginTop\n\nSet margin top\n\n\n## Specification\n\nDefault implementation: ```{ viewMarginTop : 20 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewMarginTop```| ```view__margin__top```| [View](../options/#view) |\n\n### Value\n\nAllow positive integers and 0 as value\n\n| **Default**| **Validation**| **Type** |\n| ```20```| ```^(?:[0-9]+(?:.[0-9]+)?)?$```| Integer |\n\n\n\n## Example A.\n\nSet top margin to: ```0```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginTop\" : 0, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginTop--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginTop.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginTop\" : 0 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginTop\" : 0 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginTop</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginTop\" : 0 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginTop\"=>0}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet top margin to: ```150```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginTop\" : 150, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginTop--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginTop.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginTop\" : 150 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginTop\" : 150 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginTop</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginTop\" : 150 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginTop\"=>150}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__margin__top.md","path":"options/view__margin__top.md","url":"/options/view__margin__top.html"},{"sort":8,"title":"1 Diagram","layout":"page","content":"<h1 id=\"1-diagram\">1 Diagram</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n<h3 id=\"1-showtitle-a\">1. showTitle (A)</h3>\n\n<div id=\"example-1\">\n\t<script>\n\t\td3.statosio(file,\"name\",[\"mobile\"],{\"showTitle\":true,\"viewDomId\":\"example-1\"})\n\t</script>\n</div>\n<p><a href=\"../options/show__title.html#example-a\">More Details</a> | Show title</p>\n\n","dir":"/benchmarks/","name":"benchmark-8.md","path":"benchmarks/benchmark-8.md","url":"/benchmarks/benchmark-8.html"},{"sort":9,"title":"B.4. viewMarginRight","layout":"page","content":"# viewMarginRight\n\nSet margin right\n\n\n## Specification\n\nDefault implementation: ```{ viewMarginRight : 40 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewMarginRight```| ```view__margin__right```| [View](../options/#view) |\n\n### Value\n\nAllow positive integers and 0 as value\n\n| **Default**| **Validation**| **Type** |\n| ```40```| ```^(?:[0-9]+(?:.[0-9]+)?)?$```| Integer |\n\n\n\n## Example A.\n\nSet right margin to: ```0```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginRight\" : 0, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginRight--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginRight.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginRight\" : 0 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginRight\" : 0 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginRight</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginRight\" : 0 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginRight\"=>0}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet right margin to: ```200```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginRight\" : 200, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginRight--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginRight.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginRight\" : 200 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginRight\" : 200 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginRight</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginRight\" : 200 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginRight\"=>200}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__margin__right.md","path":"options/view__margin__right.md","url":"/options/view__margin__right.html"},{"sort":9,"title":"0 Diagrams","layout":"page","content":"<h1 id=\"0-diagrams\">0 Diagrams</h1>\n\n<h2 id=\"result\">Result</h2>\n\n<table>\n <tbody>\n <tr>\n <td><strong>Name</strong></td>\n <td><strong>Result</strong></td>\n </tr>\n <tr>\n <td>Loading Time</td>\n <td><insert id=\"statosioLoadingTime\">waiting..</insert></td>\n </tr>\n <tr>\n <td>Dom Elements</td>\n <td><insert id=\"statosioDomElements\">waiting..</insert></td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"diagrams\">Diagrams</h2>\n\n","dir":"/benchmarks/","name":"benchmark-9.md","path":"benchmarks/benchmark-9.md","url":"/benchmarks/benchmark-9.html"},{"sort":10,"title":"B.5. viewMarginBottom","layout":"page","content":"# viewMarginBottom\n\nSet margin bottom\n\n\n## Specification\n\nDefault implementation: ```{ viewMarginBottom : 100 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewMarginBottom```| ```view__margin__bottom```| [View](../options/#view) |\n\n### Value\n\nAllow positive integers and 0 as value\n\n| **Default**| **Validation**| **Type** |\n| ```100```| ```^(?:[0-9]+(?:.[0-9]+)?)?$```| Integer |\n\n\n\n## Example A.\n\nSet bottom margin to: ```0```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginBottom\" : 0, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginBottom--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginBottom.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginBottom\" : 0 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginBottom\" : 0 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginBottom</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginBottom\" : 0 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginBottom\"=>0}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet bottom margin to: ```200```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginBottom\" : 200, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginBottom--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginBottom.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginBottom\" : 200 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginBottom\" : 200 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginBottom</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginBottom\" : 200 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginBottom\"=>200}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__margin__bottom.md","path":"options/view__margin__bottom.md","url":"/options/view__margin__bottom.html"},{"sort":11,"title":"B.6. viewMarginLeft","layout":"page","content":"# viewMarginLeft\n\nSet margin left\n\n\n## Specification\n\nDefault implementation: ```{ viewMarginLeft : 60 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewMarginLeft```| ```view__margin__left```| [View](../options/#view) |\n\n### Value\n\nAllow positive integers and 0 as value\n\n| **Default**| **Validation**| **Type** |\n| ```60```| ```^(?:[0-9]+(?:.[0-9]+)?)?$```| Integer |\n\n\n\n## Example A.\n\nSet left margin to: ```0```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginLeft\" : 0, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginLeft--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginLeft.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginLeft\" : 0 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginLeft\" : 0 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginLeft</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginLeft\" : 0 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginLeft\"=>0}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet left margin to: ```200```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginLeft\" : 200, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewMarginLeft--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewMarginLeft.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewMarginLeft\" : 200 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginLeft\" : 200 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewMarginLeft</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewMarginLeft\" : 200 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewMarginLeft\"=>200}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__margin__left.md","path":"options/view__margin__left.md","url":"/options/view__margin__left.html"},{"sort":12,"title":"B.7. viewWidthOuter","layout":"page","content":"# viewWidthOuter\n\nSet width of the \"canvas\" including margin, titles etc.\n\n\n## Specification\n\nDefault implementation: ```{ viewWidthOuter : 600 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewWidthOuter```| ```view__width__outer```| [View](../options/#view) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```600```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet total width to: ```200```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewWidthOuter\" : 200, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewWidthOuter--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewWidthOuter.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewWidthOuter\" : 200 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewWidthOuter\" : 200 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewWidthOuter</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewWidthOuter\" : 200 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewWidthOuter\"=>200}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet total width to: ```800```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewWidthOuter\" : 800, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewWidthOuter--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewWidthOuter.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewWidthOuter\" : 800 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewWidthOuter\" : 800 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewWidthOuter</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewWidthOuter\" : 800 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewWidthOuter\"=>800}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__width__outer.md","path":"options/view__width__outer.md","url":"/options/view__width__outer.html"},{"sort":13,"title":"B.8. viewHeightOuter","layout":"page","content":"# viewHeightOuter\n\nSet height of the \"canvas\" including margin.\n\n\n## Specification\n\nDefault implementation: ```{ viewHeightOuter : 300 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewHeightOuter```| ```view__height__outer```| [View](../options/#view) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```300```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet total height to: ```100```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewHeightOuter\" : 100, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewHeightOuter--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewHeightOuter.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewHeightOuter\" : 100 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewHeightOuter\" : 100 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewHeightOuter</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewHeightOuter\" : 100 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewHeightOuter\"=>100}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet total height to: ```600```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewHeightOuter\" : 600, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewHeightOuter--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewHeightOuter.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewHeightOuter\" : 600 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewHeightOuter\" : 600 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewHeightOuter</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewHeightOuter\" : 600 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewHeightOuter\"=>600}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__height__outer.md","path":"options/view__height__outer.md","url":"/options/view__height__outer.html"},{"sort":14,"title":"B.9. viewTranslateMultiplicator","layout":"page","content":"# viewTranslateMultiplicator\n\nBetween title, legend and diagram are spaces. These spaces gets calculated through this multiplicator.\n\n\n## Specification\n\nDefault implementation: ```{ viewTranslateMultiplicator : 1.5 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```viewTranslateMultiplicator```| ```view__translate__multiplicator```| [View](../options/#view) |\n\n### Value\n\nAllow float numbers from 1.0 to 3.99.. as value.\n\n| **Default**| **Validation**| **Type** |\n| ```1.5```| ```^[1-3](.[0-9]+)?$```| Float |\n\n\n\n## Example A.\n\nChange distance between title, legend and diagram to: ```0.42```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTranslateMultiplicator\" : 0.42, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewTranslateMultiplicator--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewTranslateMultiplicator.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewTranslateMultiplicator\" : 0.42 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTranslateMultiplicator\" : 0.42 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewTranslateMultiplicator</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTranslateMultiplicator\" : 0.42 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewTranslateMultiplicator\"=>0.42}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nChange distance between title, legend and diagram to: ```2.42```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTranslateMultiplicator\" : 2.42, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/viewTranslateMultiplicator--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/viewTranslateMultiplicator.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"viewTranslateMultiplicator\" : 2.42 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTranslateMultiplicator\" : 2.42 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - viewTranslateMultiplicator</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"viewTranslateMultiplicator\" : 2.42 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"viewTranslateMultiplicator\"=>2.42}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"view__translate__multiplicator.md","path":"options/view__translate__multiplicator.md","url":"/options/view__translate__multiplicator.html"},{"sort":15,"title":"C.1. dataXKey","layout":"page","content":"# dataXKey\n\nExpect a \"key\" name from the dataset to arrange the x range.\n\n\n## Specification\n\nDefault implementation: ```{ dataXKey : }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataXKey```| ```data__x__key```| [Data](../options/#data) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```\"\"```| ```^[a-zA-Z0-9]*$```| String |\n\n\n\n","dir":"/options/","name":"data__x__key.md","path":"options/data__x__key.md","url":"/options/data__x__key.html"},{"sort":16,"title":"C.2. dataXSelectors","layout":"page","content":"# dataXSelectors\n\nExpect one or more names which are included in the x range.\n\n```note\nThe selection can get formatted in the \"style\" category.\n```\n\n\n## Specification\n\nDefault implementation: ```{ dataXSelectors : [] }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataXSelectors```| ```data__x__selectors```| [Data](../options/#data) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```[]```| ```^[a-zA-Z0-9]*$```| Array |\n\n\n\n## Example A.\n\nSelection is set to: ```[\"Data\"]```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXSelectors\" : [\"Data\"], \"showAverage\" : false, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataXSelectors--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataXSelectors.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataXSelectors\" : [\"Data\"], \"showAverage\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXSelectors\" : [\"Data\"], \"showAverage\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataXSelectors</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXSelectors\" : [\"Data\"], \"showAverage\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataXSelectors\"=>[\"Data\"], \"showAverage\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nMultiple selections are set: ```[\"Spock\", \"Data\"]```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXSelectors\" : [\"Spock\", \"Data\"], \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataXSelectors--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataXSelectors.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataXSelectors\" : [\"Spock\", \"Data\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXSelectors\" : [\"Spock\", \"Data\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataXSelectors</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXSelectors\" : [\"Spock\", \"Data\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataXSelectors\"=>[\"Spock\", \"Data\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__x__selectors.md","path":"options/data__x__selectors.md","url":"/options/data__x__selectors.html"},{"sort":17,"title":"C.3. dataXTextLength","layout":"page","content":"# dataXTextLength\n\nThis value counts the length of the x range names an cut of the rest.\n\n```note\nUse the \"placeholder\" option for changing the cut of add-on\n```\n\n\n## Specification\n\nDefault implementation: ```{ dataXTextLength : 25 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataXTextLength```| ```data__x__text__length```| [Data](../options/#data) |\n\n### Value\n\nAllow positive integers and 0 as value\n\n| **Default**| **Validation**| **Type** |\n| ```25```| ```^(?:[0-9]+(?:.[0-9]+)?)?$```| Integer |\n\n\n\n## Example A.\n\nSet the maximum text label length for x range values to: ```5```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextLength\" : 5, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataXTextLength--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataXTextLength.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataXTextLength\" : 5 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextLength\" : 5 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataXTextLength</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextLength\" : 5 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataXTextLength\"=>5}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet the maximum text label length for x range values to: ```18```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextLength\" : 18, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataXTextLength--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataXTextLength.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataXTextLength\" : 18 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextLength\" : 18 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataXTextLength</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextLength\" : 18 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataXTextLength\"=>18}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__x__text__length.md","path":"options/data__x__text__length.md","url":"/options/data__x__text__length.html"},{"sort":18,"title":"C.4. dataXTextPlaceholder","layout":"page","content":"# dataXTextPlaceholder\n\nSet an suffix behind a string. As a signal to the viewer, that the text was cut of.\n\n\n## Specification\n\nDefault implementation: ```{ dataXTextPlaceholder : ... }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataXTextPlaceholder```| ```data__x__text__placeholder```| [Data](../options/#data) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```\"...\"```| ```^[a-zA-Z0-9]*$```| String |\n\n\n\n## Example A.\n\nChange suffix for cut of x range text labels to: ```-----```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextPlaceholder\" : \"-----\", \"dataXTextLength\" : 10, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataXTextPlaceholder--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataXTextPlaceholder.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataXTextPlaceholder\" : \"-----\", \"dataXTextLength\" : 10 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextPlaceholder\" : \"-----\", \"dataXTextLength\" : 10 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataXTextPlaceholder</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextPlaceholder\" : \"-----\", \"dataXTextLength\" : 10 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataXTextPlaceholder\"=>\"-----\", \"dataXTextLength\"=>10}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nChange suffix for cut of x range text labels to: ``````\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextPlaceholder\" : \"\", \"dataXTextLength\" : 10, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataXTextPlaceholder--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataXTextPlaceholder.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataXTextPlaceholder\" : \"\", \"dataXTextLength\" : 10 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextPlaceholder\" : \"\", \"dataXTextLength\" : 10 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataXTextPlaceholder</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataXTextPlaceholder\" : \"\", \"dataXTextLength\" : 10 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataXTextPlaceholder\"=>\"\", \"dataXTextLength\"=>10}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__x__text__placeholder.md","path":"options/data__x__text__placeholder.md","url":"/options/data__x__text__placeholder.html"},{"sort":19,"title":"C.5. dataYKeys","layout":"page","content":"# dataYKeys\n\nExpect \"keys\" from the dataset to arrange the y range. If you use one key the internal state is \"bar\". if you use multiple the internal is \"stacked\"\n\n\n## Specification\n\nDefault implementation: ```{ dataYKeys : [] }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataYKeys```| ```data__y__keys```| [Data](../options/#data) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```[]```| ```^[a-zA-Z0-9]*$```| Array |\n\n\n\n","dir":"/options/","name":"data__y__keys.md","path":"options/data__y__keys.md","url":"/options/data__y__keys.html"},{"sort":20,"title":"C.6. dataYTicks","layout":"page","content":"# dataYTicks\n\nTicks in d3 land means \"steps\". Here you can set the steps from the grid and y range.\n\n```note\nThe number of ticks are an estimation value. For a \"nicer\" look the d3 method .nice() interpolate the range also.\n```\n\n\n## Specification\n\nDefault implementation: ```{ dataYTicks : 5 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataYTicks```| ```data__y__ticks```| [Data](../options/#data) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```5```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nChange y range ticks to: ```2```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataYTicks\" : 2, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataYTicks--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataYTicks.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataYTicks\" : 2 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataYTicks\" : 2 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataYTicks</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataYTicks\" : 2 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataYTicks\"=>2}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nChange y range ticks to: ```20```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataYTicks\" : 20, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataYTicks--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataYTicks.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataYTicks\" : 20 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataYTicks\" : 20 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataYTicks</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataYTicks\" : 20 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataYTicks\"=>20}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__y__ticks.md","path":"options/data__y__ticks.md","url":"/options/data__y__ticks.html"},{"sort":21,"title":"C.7. dataSortCurrent","layout":"page","content":"# dataSortCurrent\n\nSet the general route for sorting. You can choose between \"none\", \"values\", \"names\".\n\n\n## Specification\n\nDefault implementation: ```{ dataSortCurrent : none }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataSortCurrent```| ```data__sort__current```| [Data](../options/#data) |\n\n### Value\n\nAllow \"none\", \"values\" and \"names\" as value\n\n| **Default**| **Validation**| **Type** |\n| ```\"none\"```| ```^(?:none|values|names)```| String |\n\n\n\n## Example A.\n\nSet sort to: ```values```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortCurrent--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortCurrent.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortCurrent\" : \"values\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortCurrent</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortCurrent\"=>\"values\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet sort to: ```names```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"names\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortCurrent--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortCurrent.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortCurrent\" : \"names\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"names\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortCurrent</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"names\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortCurrent\"=>\"names\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__sort__current.md","path":"options/data__sort__current.md","url":"/options/data__sort__current.html"},{"sort":22,"title":"C.8. dataSortByValues","layout":"page","content":"# dataSortByValues\n\nHere you can set type of sorting. You can choose between \"ascending\" and \"decending\"\n\n```note\nYou need to activate this sorting type by setting up the general route in \"sort current\"\n```\n\n\n## Specification\n\nDefault implementation: ```{ dataSortByValues : decending }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataSortByValues```| ```data__sort__by__values```| [Data](../options/#data) |\n\n### Value\n\nAllow \"ascending\" or \"decending\" as value.\n\n| **Default**| **Validation**| **Type** |\n| ```\"decending\"```| ```^(?:ascending|decending)```| String |\n\n\n\n## Example A.\n\nSet sequence to: ```ascending``` and hide average line.\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"ascending\", \"showAverage\" : false, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortByValues--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortByValues.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"ascending\", \"showAverage\" : false }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"ascending\", \"showAverage\" : false }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortByValues</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"ascending\", \"showAverage\" : false }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortCurrent\"=>\"values\",\n \"dataSortByValues\"=>\"ascending\",\n \"showAverage\"=>false}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet sequence to: ```decending```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"decending\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortByValues--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortByValues.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"decending\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"decending\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortByValues</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"values\", \"dataSortByValues\" : \"decending\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortCurrent\"=>\"values\", \"dataSortByValues\"=>\"decending\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example C.\n\nSet sequence to: ``````\n\n### Output\n\n <div id=\"c\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"none\", \"view__dom_id\" : \"c\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortByValues--example-c.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortByValues.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortCurrent\" : \"none\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"none\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortByValues</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortCurrent\" : \"none\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortCurrent\"=>\"none\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__sort__by__values.md","path":"options/data__sort__by__values.md","url":"/options/data__sort__by__values.html"},{"sort":23,"title":"C.9. dataSortByNames","layout":"page","content":"# dataSortByNames\n\nHere you can set type of sorting. You can choose between \"ascending\" and \"decending\"\n\n\n## Specification\n\nDefault implementation: ```{ dataSortByNames : ascending }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataSortByNames```| ```data__sort__by__names```| [Data](../options/#data) |\n\n### Value\n\nAllow \"ascending\" or \"decending\" as value.\n\n| **Default**| **Validation**| **Type** |\n| ```\"ascending\"```| ```^(?:ascending|decending)```| String |\n\n\n\n## Example A.\n\nSet sequence to: ```ascending```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"ascending\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortByNames--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortByNames.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"ascending\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"ascending\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortByNames</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"ascending\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"dataSortCurrent\"=>\"names\", \"dataSortByNames\"=>\"ascending\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet sequence to: ```decending```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"decending\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortByNames--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortByNames.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"decending\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"decending\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortByNames</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"dataSortCurrent\" : \"names\", \"dataSortByNames\" : \"decending\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"dataSortCurrent\"=>\"names\", \"dataSortByNames\"=>\"decending\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__sort__by__names.md","path":"options/data__sort__by__names.md","url":"/options/data__sort__by__names.html"},{"sort":24,"title":"C.10. dataSortSelection","layout":"page","content":"# dataSortSelection\n\nChange position of your selection. You can choose between \"start\", \"end\" and \"none\"\n\n```note\nThe sequence is based on your selection sequence.\n```\n\n\n## Specification\n\nDefault implementation: ```{ dataSortSelection : none }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataSortSelection```| ```data__sort__selection```| [Data](../options/#data) |\n\n### Value\n\nAllow \"start\" or \"end\" as value.\n\n| **Default**| **Validation**| **Type** |\n| ```\"none\"```| ```^(?:start|end)```| String |\n\n\n\n## Example A.\n\nSet selection to: ```start```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"start\", \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortSelection--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortSelection.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortSelection\" : \"start\", \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"start\", \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortSelection</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"start\", \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortSelection\"=>\"start\", \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet selection to: ```end```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"end\", \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortSelection--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortSelection.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortSelection\" : \"end\", \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"end\", \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortSelection</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"end\", \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortSelection\"=>\"end\", \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example C.\n\nSet selection to: ```none```\n\n### Output\n\n <div id=\"c\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"none\", \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"c\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataSortSelection--example-c.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataSortSelection.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"dataSortSelection\" : \"none\", \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"none\", \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataSortSelection</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"dataSortSelection\" : \"none\", \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"dataSortSelection\"=>\"none\", \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__sort__selection.md","path":"options/data__sort__selection.md","url":"/options/data__sort__selection.html"},{"sort":25,"title":"C.11. dataLegendTextSeparater","layout":"page","content":"# dataLegendTextSeparater\n\nThis tweak split your keys with the separater and capitalize every word and insert a space in between.\n\n\n## Specification\n\nDefault implementation: ```{ dataLegendTextSeparater : _ }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```dataLegendTextSeparater```| ```data__legend__text__separater```| [Data](../options/#data) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```\"_\"```| ```^[a-zA-Z0-9]*$```| String |\n\n\n\n## Example A.\n\nReplace character \"```_```\" to \" \" in the legend text label\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true, \"dataLegendTextSeparater\" : \"_\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/dataLegendTextSeparater--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/dataLegendTextSeparater.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"showLegend\" : true, \"dataLegendTextSeparater\" : \"_\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true, \"dataLegendTextSeparater\" : \"_\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - dataLegendTextSeparater</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"showLegend\" : true, \"dataLegendTextSeparater\" : \"_\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"showLegend\"=>true, \"dataLegendTextSeparater\"=>\"_\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"data__legend__text__separater.md","path":"options/data__legend__text__separater.md","url":"/options/data__legend__text__separater.html"},{"sort":26,"title":"D.1. styleColorAverage","layout":"page","content":"# styleColorAverage\n\nSet color of the average line.\n\n\n## Specification\n\nDefault implementation: ```{ styleColorAverage : #000000 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleColorAverage```| ```style__color__average```| [Style](../options/#style) |\n\n### Value\n\nAllow hex values including short writing needs to with starting with #.\n\n| **Default**| **Validation**| **Type** |\n| ```\"#000000\"```| ```^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$```| String |\n\n\n\n## Example A.\n\nSet average color line to: ```purple```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorAverage\" : \"purple\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorAverage--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorAverage.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorAverage\" : \"purple\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorAverage\" : \"purple\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorAverage</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorAverage\" : \"purple\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorAverage\"=>\"purple\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet average color line to: ```#c1033c```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorAverage\" : \"#c1033c\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorAverage--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorAverage.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorAverage\" : \"#c1033c\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorAverage\" : \"#c1033c\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorAverage</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorAverage\" : \"#c1033c\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorAverage\"=>\"#c1033c\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__color__average.md","path":"options/style__color__average.md","url":"/options/style__color__average.html"},{"sort":27,"title":"D.2. styleColorCanvasBackground","layout":"page","content":"# styleColorCanvasBackground\n\nSet background color.\n\n\n## Specification\n\nDefault implementation: ```{ styleColorCanvasBackground : white }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleColorCanvasBackground```| ```style__color__canvas_background```| [Style](../options/#style) |\n\n### Value\n\nAllow hex values including short writing needs to with starting with #.\n\n| **Default**| **Validation**| **Type** |\n| ```\"white\"```| ```^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$```| String |\n\n\n\n## Example A.\n\nSet background color to: ```lightgray```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorCanvasBackground\" : \"lightgray\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorCanvasBackground--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorCanvasBackground.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorCanvasBackground\" : \"lightgray\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorCanvasBackground\" : \"lightgray\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorCanvasBackground</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorCanvasBackground\" : \"lightgray\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorCanvasBackground\"=>\"lightgray\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet background color to: ```#fed8b1```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorCanvasBackground\" : \"#fed8b1\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorCanvasBackground--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorCanvasBackground.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorCanvasBackground\" : \"#fed8b1\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorCanvasBackground\" : \"#fed8b1\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorCanvasBackground</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorCanvasBackground\" : \"#fed8b1\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorCanvasBackground\"=>\"#fed8b1\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__color__canvas_background.md","path":"options/style__color__canvas_background.md","url":"/options/style__color__canvas_background.html"},{"sort":28,"title":"D.3. styleColorFont","layout":"page","content":"# styleColorFont\n\nSet default font color. Excluding non-selection content.\n\n\n## Specification\n\nDefault implementation: ```{ styleColorFont : #000000 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleColorFont```| ```style__color__font```| [Style](../options/#style) |\n\n### Value\n\nAllow hex values including short writing needs to with starting with #.\n\n| **Default**| **Validation**| **Type** |\n| ```\"#000000\"```| ```^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$```| String |\n\n\n\n## Example A.\n\nSet default font color to: ```red```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorFont\" : \"red\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorFont--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorFont.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorFont\" : \"red\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorFont\" : \"red\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorFont</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorFont\" : \"red\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorFont\"=>\"red\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet default font color to: ```#f66504```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorFont\" : \"#f66504\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorFont--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorFont.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorFont\" : \"#f66504\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorFont\" : \"#f66504\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorFont</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorFont\" : \"#f66504\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorFont\"=>\"#f66504\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__color__font.md","path":"options/style__color__font.md","url":"/options/style__color__font.html"},{"sort":29,"title":"D.4. styleColorLegends","layout":"page","content":"# styleColorLegends\n\nSet legend color palettes. Expect an array of \"hex\" values or \"html\" color-names.\n\n```note\nYou can set as less as you want, if a color is missing it will filled with \"#000000\"\n```\n\n\n## Specification\n\nDefault implementation: ```{ styleColorLegends : [\"#5186EC\", \"#D95040\", \"#F2BD42\"] }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleColorLegends```| ```style__color__legends```| [Style](../options/#style) |\n\n### Value\n\nAllow hex values including short writing needs to with starting with #.\n\n| **Default**| **Validation**| **Type** |\n| ```[\"#5186EC\", \"#D95040\", \"#F2BD42\"]```| ```^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$```| Array |\n\n\n\n## Example A.\n\nSet color legend palette to: ```[\"yellow\", \"red\", \"green\"]```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorLegends\" : [\"yellow\", \"red\", \"green\"], \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorLegends--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorLegends.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"styleColorLegends\" : [\"yellow\", \"red\", \"green\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorLegends\" : [\"yellow\", \"red\", \"green\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorLegends</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorLegends\" : [\"yellow\", \"red\", \"green\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"styleColorLegends\"=>[\"yellow\", \"red\", \"green\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\n\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorLegends\" : [\"#f59351\", \"#c9504a\", \"#12514c\", \"#2f7872\", \"#a6b797\"], \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorLegends--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorLegends.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"styleColorLegends\" : [\"#f59351\", \"#c9504a\", \"#12514c\", \"#2f7872\", \"#a6b797\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorLegends\" : [\"#f59351\", \"#c9504a\", \"#12514c\", \"#2f7872\", \"#a6b797\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorLegends</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorLegends\" : [\"#f59351\", \"#c9504a\", \"#12514c\", \"#2f7872\", \"#a6b797\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"styleColorLegends\"=>[\"#f59351\", \"#c9504a\", \"#12514c\", \"#2f7872\", \"#a6b797\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__color__legends.md","path":"options/style__color__legends.md","url":"/options/style__color__legends.html"},{"sort":30,"title":"D.5. styleColorGridline","layout":"page","content":"# styleColorGridline\n\nSet the gridline color. Use \"hex\" value or \"html\" color-names.\n\n\n## Specification\n\nDefault implementation: ```{ styleColorGridline : #E5E5E5 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleColorGridline```| ```style__color__gridline```| [Style](../options/#style) |\n\n### Value\n\nAllow hex values including short writing needs to with starting with #.\n\n| **Default**| **Validation**| **Type** |\n| ```\"#E5E5E5\"```| ```^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$```| String |\n\n\n\n## Example A.\n\nSet gridline value to: ```yellow```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorGridline\" : \"yellow\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorGridline--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorGridline.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorGridline\" : \"yellow\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorGridline\" : \"yellow\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorGridline</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorGridline\" : \"yellow\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorGridline\"=>\"yellow\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet gridline value to: ```#f59351```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorGridline\" : \"#f59351\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorGridline--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorGridline.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleColorGridline\" : \"#f59351\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorGridline\" : \"#f59351\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorGridline</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleColorGridline\" : \"#f59351\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleColorGridline\"=>\"#f59351\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__color__gridline.md","path":"options/style__color__gridline.md","url":"/options/style__color__gridline.html"},{"sort":31,"title":"D.6. styleColorSelectorsChart","layout":"page","content":"# styleColorSelectorsChart\n\nColorize the chart of the selection. Use \"hex\" values or \"html\" color-names.\n\n\n## Specification\n\nDefault implementation: ```{ styleColorSelectorsChart : [\"#EE752F\", \"#5186EC\"] }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleColorSelectorsChart```| ```style__color__selectors__chart```| [Style](../options/#style) |\n\n### Value\n\nAllow hex values including short writing needs to with starting with #.\n\n| **Default**| **Validation**| **Type** |\n| ```[\"#EE752F\", \"#5186EC\"]```| ```^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$```| Array |\n\n\n\n## Example A.\n\nSet palette to: ```[\"yellow\", \"red\", \"green\"]```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsChart\" : [\"yellow\", \"red\", \"green\"], \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorSelectorsChart--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorSelectorsChart.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"styleColorSelectorsChart\" : [\"yellow\", \"red\", \"green\"], \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsChart\" : [\"yellow\", \"red\", \"green\"], \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorSelectorsChart</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsChart\" : [\"yellow\", \"red\", \"green\"], \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"styleColorSelectorsChart\"=>[\"yellow\", \"red\", \"green\"],\n \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet palette to: ```[\"#f59351\", \"#c9504a\", \"#12514c\"]```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsChart\" : [\"#f59351\", \"#c9504a\", \"#12514c\"], \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorSelectorsChart--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorSelectorsChart.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"styleColorSelectorsChart\" : [\"#f59351\", \"#c9504a\", \"#12514c\"], \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsChart\" : [\"#f59351\", \"#c9504a\", \"#12514c\"], \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorSelectorsChart</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsChart\" : [\"#f59351\", \"#c9504a\", \"#12514c\"], \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"styleColorSelectorsChart\"=>[\"#f59351\", \"#c9504a\", \"#12514c\"],\n \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__color__selectors__chart.md","path":"options/style__color__selectors__chart.md","url":"/options/style__color__selectors__chart.html"},{"sort":32,"title":"D.7. styleColorSelectorsText","layout":"page","content":"# styleColorSelectorsText\n\nColorize the font of the selection. Use \"hex\" values or \"html\" color-names.\n\n\n## Specification\n\nDefault implementation: ```{ styleColorSelectorsText : [\"#000000\", \"#000000\"] }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleColorSelectorsText```| ```style__color__selectors__text```| [Style](../options/#style) |\n\n### Value\n\nAllow hex values including short writing needs to with starting with #.\n\n| **Default**| **Validation**| **Type** |\n| ```[\"#000000\", \"#000000\"]```| ```^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$```| Array |\n\n\n\n## Example A.\n\nSet font color of selection and others to: ```[\"grey\", \"lightgrey\"]```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsText\" : [\"grey\", \"lightgrey\"], \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorSelectorsText--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorSelectorsText.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"styleColorSelectorsText\" : [\"grey\", \"lightgrey\"], \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsText\" : [\"grey\", \"lightgrey\"], \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorSelectorsText</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsText\" : [\"grey\", \"lightgrey\"], \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"styleColorSelectorsText\"=>[\"grey\", \"lightgrey\"], \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet font color of selection and others to: ```[\"#f59351\", \"#a6b797\"]```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsText\" : [\"#f59351\", \"#a6b797\"], \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleColorSelectorsText--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleColorSelectorsText.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile **and** desktop google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\", \"desktop\" ]``` | Array |\n| **Options** | ```{ \"styleColorSelectorsText\" : [\"#f59351\", \"#a6b797\"], \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsText\" : [\"#f59351\", \"#a6b797\"], \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleColorSelectorsText</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\", \"desktop\" ], \n { \"styleColorSelectorsText\" : [\"#f59351\", \"#a6b797\"], \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\", \"desktop\" ],\n options: {\"styleColorSelectorsText\"=>[\"#f59351\", \"#a6b797\"],\n \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__color__selectors__text.md","path":"options/style__color__selectors__text.md","url":"/options/style__color__selectors__text.html"},{"sort":33,"title":"D.8. styleFontSizeText","layout":"page","content":"# styleFontSizeText\n\nSet default font size, including selection.\n\n\n## Specification\n\nDefault implementation: ```{ styleFontSizeText : 10 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleFontSizeText```| ```style__font__size__text```| [Style](../options/#style) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```10```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet default font size to: ```20```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeText\" : 20, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontSizeText--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontSizeText.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontSizeText\" : 20 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeText\" : 20 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontSizeText</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeText\" : 20 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontSizeText\"=>20}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet default font size to: ```5```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeText\" : 5, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontSizeText--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontSizeText.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontSizeText\" : 5 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeText\" : 5 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontSizeText</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeText\" : 5 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontSizeText\"=>5}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__font__size__text.md","path":"options/style__font__size__text.md","url":"/options/style__font__size__text.html"},{"sort":34,"title":"D.9. styleFontSizeTitle","layout":"page","content":"# styleFontSizeTitle\n\nSet font size of title\n\n\n## Specification\n\nDefault implementation: ```{ styleFontSizeTitle : 18 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleFontSizeTitle```| ```style__font__size__title```| [Style](../options/#style) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```18```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet title font size to: ```20```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeTitle\" : 20, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontSizeTitle--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontSizeTitle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontSizeTitle\" : 20 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeTitle\" : 20 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontSizeTitle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeTitle\" : 20 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontSizeTitle\"=>20}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet title font size to: ```5```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeTitle\" : 5, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontSizeTitle--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontSizeTitle.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontSizeTitle\" : 5 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeTitle\" : 5 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontSizeTitle</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontSizeTitle\" : 5 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontSizeTitle\"=>5}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__font__size__title.md","path":"options/style__font__size__title.md","url":"/options/style__font__size__title.html"},{"sort":35,"title":"D.10. styleFontFamily","layout":"page","content":"# styleFontFamily\n\nSet default font family\n\n\n## Specification\n\nDefault implementation: ```{ styleFontFamily : arial }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleFontFamily```| ```style__font__family```| [Style](../options/#style) |\n\n### Value\n\nAllow \"arial\", \"times\" and \"helvetica\" as value\n\n| **Default**| **Validation**| **Type** |\n| ```\"arial\"```| ```^(?:arial|times|helvetica)```| String |\n\n\n\n## Example A.\n\nSet default font family to: ```georgia```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFamily\" : \"georgia\", \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontFamily--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontFamily.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontFamily\" : \"georgia\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFamily\" : \"georgia\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontFamily</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFamily\" : \"georgia\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontFamily\"=>\"georgia\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet default font family to: ```verdana```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFamily\" : \"verdana\", \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontFamily--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontFamily.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontFamily\" : \"verdana\" }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFamily\" : \"verdana\" }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontFamily</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFamily\" : \"verdana\" }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontFamily\"=>\"verdana\"}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__font__family.md","path":"options/style__font__family.md","url":"/options/style__font__family.html"},{"sort":36,"title":"D.11. styleFontFormatSelectors","layout":"page","content":"# styleFontFormatSelectors\n\nSet format of content use \"Html\" Syntax (\"bold\", \"underline\", \"normal\" etc.). \n\n\n## Specification\n\nDefault implementation: ```{ styleFontFormatSelectors : [\"bold\", \"normal\"] }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleFontFormatSelectors```| ```style__font__format__selectors```| [Style](../options/#style) |\n\n### Value\n\nAllow \"bold\", \"normal\" and \"underline\" as value.\n\n| **Default**| **Validation**| **Type** |\n| ```[\"bold\", \"normal\"]```| ```^(?:bold|normal|underline)```| Array |\n\n\n\n## Example A.\n\nSet font format of selection x range text labels to: ```[\"normal\", \"bold\"]```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFormatSelectors\" : [\"normal\", \"bold\"], \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontFormatSelectors--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontFormatSelectors.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontFormatSelectors\" : [\"normal\", \"bold\"], \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFormatSelectors\" : [\"normal\", \"bold\"], \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontFormatSelectors</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFormatSelectors\" : [\"normal\", \"bold\"], \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontFormatSelectors\"=>[\"normal\", \"bold\"], \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet font format of selection x range text labels to: ```[\"bold\", \"normal\"]```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFormatSelectors\" : [\"bold\", \"normal\"], \"dataXSelectors\" : [\"Spock\"], \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleFontFormatSelectors--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleFontFormatSelectors.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleFontFormatSelectors\" : [\"bold\", \"normal\"], \"dataXSelectors\" : [\"Spock\"] }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFormatSelectors\" : [\"bold\", \"normal\"], \"dataXSelectors\" : [\"Spock\"] }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleFontFormatSelectors</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleFontFormatSelectors\" : [\"bold\", \"normal\"], \"dataXSelectors\" : [\"Spock\"] }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleFontFormatSelectors\"=>[\"bold\", \"normal\"], \"dataXSelectors\"=>[\"Spock\"]}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__font__format__selectors.md","path":"options/style__font__format__selectors.md","url":"/options/style__font__format__selectors.html"},{"sort":37,"title":"D.12. styleStrokeAverage","layout":"page","content":"# styleStrokeAverage\n\nSet stroke weight of average line.\n\n\n## Specification\n\nDefault implementation: ```{ styleStrokeAverage : 2 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleStrokeAverage```| ```style__stroke__average```| [Style](../options/#style) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```2```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet stroke weight of average line to: ```1```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeAverage\" : 1, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleStrokeAverage--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleStrokeAverage.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleStrokeAverage\" : 1 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeAverage\" : 1 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleStrokeAverage</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeAverage\" : 1 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleStrokeAverage\"=>1}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet stroke weight of average line to: ```15```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeAverage\" : 15, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleStrokeAverage--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleStrokeAverage.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleStrokeAverage\" : 15 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeAverage\" : 15 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleStrokeAverage</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeAverage\" : 15 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleStrokeAverage\"=>15}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__stroke__average.md","path":"options/style__stroke__average.md","url":"/options/style__stroke__average.html"},{"sort":38,"title":"D.13. styleStrokeGridline","layout":"page","content":"# styleStrokeGridline\n\nSet stroke weight of gridline.\n\n\n## Specification\n\nDefault implementation: ```{ styleStrokeGridline : 2 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleStrokeGridline```| ```style__stroke__gridline```| [Style](../options/#style) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```2```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet stroke weight of gridline to: ```2```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeGridline\" : 2, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleStrokeGridline--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleStrokeGridline.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleStrokeGridline\" : 2 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeGridline\" : 2 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleStrokeGridline</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeGridline\" : 2 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleStrokeGridline\"=>2}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet stroke weight of gridline to: ```14```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeGridline\" : 14, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleStrokeGridline--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleStrokeGridline.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleStrokeGridline\" : 14 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeGridline\" : 14 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleStrokeGridline</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleStrokeGridline\" : 14 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleStrokeGridline\"=>14}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__stroke__gridline.md","path":"options/style__stroke__gridline.md","url":"/options/style__stroke__gridline.html"},{"sort":39,"title":"D.14. styleLegendRectSizeFull","layout":"page","content":"# styleLegendRectSizeFull\n\nSet rectangle size of legend item.\n\n\n## Specification\n\nDefault implementation: ```{ styleLegendRectSizeFull : 16 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleLegendRectSizeFull```| ```style__legend__rect_size__full```| [Style](../options/#style) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```16```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet rect size of legend color separators to: ```4```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleLegendRectSizeFull\" : 4, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleLegendRectSizeFull--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleLegendRectSizeFull.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleLegendRectSizeFull\" : 4 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleLegendRectSizeFull\" : 4 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleLegendRectSizeFull</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleLegendRectSizeFull\" : 4 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleLegendRectSizeFull\"=>4}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet rect size of legend color separators to: ```20```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleLegendRectSizeFull\" : 20, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleLegendRectSizeFull--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleLegendRectSizeFull.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleLegendRectSizeFull\" : 20 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleLegendRectSizeFull\" : 20 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleLegendRectSizeFull</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleLegendRectSizeFull\" : 20 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleLegendRectSizeFull\"=>20}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__legend__rect_size__full.md","path":"options/style__legend__rect_size__full.md","url":"/options/style__legend__rect_size__full.html"},{"sort":40,"title":"D.15. styleOtherCircleChartRadius","layout":"page","content":"# styleOtherCircleChartRadius\n\nSet radius of circle.\n\n```note\nTo show circles you need to switch to circle chart mode.\n```\n\n\n## Specification\n\nDefault implementation: ```{ styleOtherCircleChartRadius : 4 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleOtherCircleChartRadius```| ```style__other__circle_chart_radius```| [Style](../options/#style) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```4```| ```^[1-9]d*$```| Integer |\n\n\n\n## Example A.\n\nSet circle radius to: ```4```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 4, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleOtherCircleChartRadius--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleOtherCircleChartRadius.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 4 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 4 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleOtherCircleChartRadius</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 4 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showDataAsCircle\"=>true, \"styleOtherCircleChartRadius\"=>4}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet circle radius to: ```14```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 14, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleOtherCircleChartRadius--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleOtherCircleChartRadius.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 14 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 14 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleOtherCircleChartRadius</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"showDataAsCircle\" : true, \"styleOtherCircleChartRadius\" : 14 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"showDataAsCircle\"=>true, \"styleOtherCircleChartRadius\"=>14}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__other__circle_chart_radius.md","path":"options/style__other__circle_chart_radius.md","url":"/options/style__other__circle_chart_radius.html"},{"sort":41,"title":"D.16. styleOtherRangeXTextRotation","layout":"page","content":"# styleOtherRangeXTextRotation\n\nSet text rotation of the x axis.\n\n\n## Specification\n\nDefault implementation: ```{ styleOtherRangeXTextRotation : -45 }```\n\n### Key\n\n| **Name**| **Alias**| **Category** |\n| ```styleOtherRangeXTextRotation```| ```style__other__range_x_text_rotation```| [Style](../options/#style) |\n\n### Value\n\nAllow negative integers from -90 to -1 including 0 as value.\n\n| **Default**| **Validation**| **Type** |\n| ```-45```| ```^0|-[1-9]d*```| Integer |\n\n\n\n## Example A.\n\nSet x range text label rotation to: ```-90```\n\n### Output\n\n <div id=\"a\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleOtherRangeXTextRotation\" : -90, \"view__dom_id\" : \"a\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleOtherRangeXTextRotation--example-a.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleOtherRangeXTextRotation.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleOtherRangeXTextRotation\" : -90 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleOtherRangeXTextRotation\" : -90 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleOtherRangeXTextRotation</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleOtherRangeXTextRotation\" : -90 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleOtherRangeXTextRotation\"=>-90}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n## Example B.\n\nSet x range text label rotation to: ```-20```\n\n### Output\n\n <div id=\"b\">\n <script> \n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleOtherRangeXTextRotation\" : -20, \"view__dom_id\" : \"b\" }\n)\n\n </script>\n </div>\n\nOpen output in a [blank window](/sources/styleOtherRangeXTextRotation--example-b.html){:target=\"_self\"}. \nDownload examples [as zip](/sources/styleOtherRangeXTextRotation.zip){:target=\"_blank\"}. \n\n### Parameters\n\nThis dataset shows the mobile google pagerank performance score for a certain website.\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Source** | [\"../data/performance.json\"](/data/performance.json) | String |\n| **X** | ```\"name\"``` | String |\n| **Y** | ```[ \"mobile\" ]``` | Array |\n| **Options** | ```{ \"styleOtherRangeXTextRotation\" : -20 }``` | Object |\n\n\n### Javascript\n\n* Invoke Function\n\n```javascript\nd3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleOtherRangeXTextRotation\" : -20 }\n)\n```\n\n* HTML Implementation\n\n```html\n<!DOCTYPE html>\n<head>\n <title>d3.statosio - styleOtherRangeXTextRotation</title>\n <meta content=\"text/html;charset=utf-8\" http-equiv=\"Content-Type\">\n <meta content=\"utf-8\" http-equiv=\"encoding\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/statosio/0.9/statosio.js\"></script>\n</head>\n<body>\n <script>\n d3.json( \"../data/performance.json\" )\n .then( ( file ) => {\n d3.statosio( \n file, \n \"name\", \n [ \"mobile\" ], \n { \"styleOtherRangeXTextRotation\" : -20 }\n )\n } )\n </script>\n</body>\n```\n### Ruby\n\n* Gem Install\n\n```ruby\ngem install statosio\ngem install prawn\ngem install prawn-svg\n```\n\n* Implementation\n\n```ruby\nrequire \"statosio\"\nrequire \"prawn\"\nrequire \"prawn-svg\"\n\nfile = File.read( \"../data/performance.json\" )\ndataset = JSON.parse( file )\n\nstatosio = Statosio::Generate.new\nchart = statosio.svg(\n dataset: dataset,\n x: \"name\", \n y: [ \"mobile\" ],\n options: {\"styleOtherRangeXTextRotation\"=>-20}\n \n)\n\nPrawn::Document.generate( \"statosio.pdf\" ) do | pdf |\n pdf.svg( chart, width: 500 )\nend\n```\n","dir":"/options/","name":"style__other__range_x_text_rotation.md","path":"options/style__other__range_x_text_rotation.md","url":"/options/style__other__range_x_text_rotation.html"}]